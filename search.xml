<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>回忆突然袭来，感觉好伤感</title>
      <link href="/2024/10/30/emo20241030/"/>
      <url>/2024/10/30/emo20241030/</url>
      
        <content type="html"><![CDATA[<p>现在是23:29，回忆突然袭来，感觉好伤感。</p><p>看了微信收藏的图片跟视频，这几年自己就像迷路一般，走了一条乱糟糟的路，走丢了很多人，留下许多唏嘘。</p><p>我持着沉重的心情走在路上，有时候像是失忆的躯壳，灵魂不知飘荡到了哪个时空。</p><p>过去的自己越来越陌生，现在的自己也越来越陌生，一切都那么不真实，如梦如幻。</p><p>多希望这一切都是一场梦，然后突然抖了一下从懒洋洋的午后醒来。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 情绪 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> emo </tag>
            
            <tag> 回忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端的nvm、nodejs、npm、yarn、pnpm配置备忘</title>
      <link href="/2024/09/26/nvm-nodejs-npm-yarn-pnpm-config/"/>
      <url>/2024/09/26/nvm-nodejs-npm-yarn-pnpm-config/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><code>npm、yarn、pnpm</code>默认的<code>cache目录</code>在系统盘，现希望迁移其缓存<code>cache</code>及<code>global</code>目录到<code>F:\.cache\nodejs</code>下。</p><blockquote><p>这里默认用windows安装为例</p></blockquote><p>推荐路线：<code>安装nvm</code> -》 <code>用nvm安装nodejs</code> -》 <code>配置npm</code> -》【可选】<code>安装yarn/pnpm</code>（这两个也是跟npm类似的包管理工具，可选）</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://blog.csdn.net/zm06201118/article/details/125048608">关于这几个工具的介绍&amp;对比文章</a></li><li><a href="https://www.cnblogs.com/breezefaith/p/17976013">关于npm、yarn、pnpm的缓存路径与清理的介绍</a></li></ul><h3 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h3><ul><li><p><a href="https://github.com/coreybutler/nvm-windows/releases">windows</a></p><p>  windows的从release中下载安装文件进行安装</p></li><li><p><a href="https://github.com/nvm-sh/nvm">linux&#x2F;mac</a></p><p>  linux&#x2F;mac的执行仓库提供的sh脚本进行安装，安装完毕后在终端可以看到nvm的安装目录，默认在<code>~/.nvm</code></p></li><li><p>安装完毕后修改默认配置：</p><p>  修改nvm安装目录下的settings.txt文件，可指定nvm的路径跟nodejs的路径（nodejs的路径实际默认会安装在nvm的安装目录下，指定的nodejs路径其实是一个软链接路径）：</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root: F:/APP/nvm</span><br><span class="line">path: F:/APP/nvm/nodejs</span><br><span class="line">arch: 64</span><br><span class="line">originalpath: </span><br><span class="line">originalversion: </span><br><span class="line">node_mirror: https://registry.npmmirror.com/binary.html?path=node/</span><br><span class="line">npm_mirror: https://registry.npmmirror.com/binary.html?path=npm/</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量（方面直接用<code>nvm命令</code>、<code>nodejs全局命令</code>）：</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setx NVM_HOME &quot;F:\APP\nvm&quot; /M</span><br><span class="line">setx NVM_SYMLINK &quot;F:\APP\nvm\nodejs&quot; /M</span><br><span class="line"></span><br><span class="line">setx PATH &quot;%PATH%;%NVM_HOME%;%NVM_SYMLINK%&quot; /M</span><br></pre></td></tr></table></figure><p>  在Path中追加配置：<code>%NVM_HOME%</code> 跟 <code>%NVM_SYMLINK%</code></p></li></ul><h3 id="用nvm安装nodejs："><a href="#用nvm安装nodejs：" class="headerlink" title="用nvm安装nodejs："></a>用nvm安装nodejs：</h3><ul><li><p>安装并使用nodejs</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install 20</span><br><span class="line">nvm use 20</span><br></pre></td></tr></table></figure></li><li><p>查看nvm版本</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm v</span><br></pre></td></tr></table></figure></li><li><p>查看node版本：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置npm："><a href="#配置npm：" class="headerlink" title="配置npm："></a>配置npm：</h3><p>配置文件路径为：<code>C:/Users/userName/.npmrc</code>，自定义缓存目录跟仓库源（这里用了<code>nvm</code>就不需要配置<code>prefix</code>目录了，默认-g的全局依赖包会安装到nvm下的nodejs目录）</p><ul><li><p>指定cache目录+仓库源：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set cache &quot;F:/.cache/nodejs/npm/cache&quot; &amp;&amp; npm config set registry &quot;http://registry.npmmirror.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>查看当前配置：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config ls -l</span><br></pre></td></tr></table></figure></li><li><p>安装全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>移除全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>查看全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list -g</span><br></pre></td></tr></table></figure></li><li><p>安装局部依赖（默认安装在当前项目根目录的<code>node_modules</code>下）:</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>移除局部依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>【仅记录，请忽略】原先默认的路径配置：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cache = &quot;C:/Users/userName/AppData/Local/npm-cache&quot;</span><br><span class="line">prefix = &quot;C:/Program Files/nodejs&quot;</span><br></pre></td></tr></table></figure></li><li><p>获取缓存路径：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get cache</span><br></pre></td></tr></table></figure></li><li><p>清理缓存：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean -f</span><br></pre></td></tr></table></figure></li></ul><h3 id="【可选】安装yarn"><a href="#【可选】安装yarn" class="headerlink" title="【可选】安装yarn"></a>【可选】安装yarn</h3><p>配置文件路径为：<code>C:/Users/userName/.yarnrc</code></p><ul><li><p>安装：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure></li><li><p>配置cache跟glabal目录+仓库源（执行完毕后需要将global目录配置到环境变量中）：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn config set prefix &quot;F:\.cache\nodejs\Yarn\Data&quot; &amp;&amp; `</span><br><span class="line">yarn config set global-folder &quot;F:\.cache\nodejs\Yarn\Data\global&quot; &amp;&amp; `</span><br><span class="line">yarn config set cache-folder &quot;F:\.cache\nodejs\Yarn\Cache&quot; &amp;&amp; `</span><br><span class="line">yarn config set link-folder &quot;F:\.cache\nodejs\Yarn\Data\link&quot; &amp;&amp; `</span><br><span class="line">yarn config set registry &quot;http://registry.npmmirror.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>查看当前配置：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global dir &amp;&amp; yarn cache dir</span><br></pre></td></tr></table></figure></li><li><p>安装全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>移除全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global remove &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>查看全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global list &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>安装局部依赖（默认安装在当前项目根目录的<code>node_modules</code>下）:</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>移除局部依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn remove &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>【仅记录，请忽略】原先默认的路径配置：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cache = &quot;C:/Users/userName/AppData/Local/Yarn/Cache&quot;</span><br><span class="line">prefix = &quot;C:/Users/userName/AppData/Local/Yarn/Data&quot;</span><br></pre></td></tr></table></figure></li><li><p>获取缓存路径：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn cache dir</span><br></pre></td></tr></table></figure></li><li><p>清理缓存：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn cache clean -f</span><br></pre></td></tr></table></figure></li><li><p>配置yarn的全局依赖目录环境变量</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setx PATH &quot;%PATH%;F:\.cache\nodejs\Yarn\Data\bin&quot; /M</span><br></pre></td></tr></table></figure><p>  在Path中追加配置：<code>F:\.cache\nodejs\Yarn\Data\bin</code></p></li></ul><h3 id="【可选】安装pnpm"><a href="#【可选】安装pnpm" class="headerlink" title="【可选】安装pnpm"></a>【可选】安装pnpm</h3><p>默认配置文件路径为：<code>C:\Users\userName\AppData\Local\pnpm\config\rc</code></p><ul><li><p>安装：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pnpm</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量（全局包会存放于该目录）</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setx PNPM_HOME &quot;F:\.cache\nodejs\pnpm&quot; /M</span><br><span class="line"></span><br><span class="line">setx PATH &quot;%PATH%;%PNPM_HOME%&quot; /M</span><br></pre></td></tr></table></figure><p>  在Path中追加配置：<code>%PNPM_HOME%</code></p></li><li><p>配置cache跟glabal目录+仓库源：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pnpm config set cache-dir &quot;F:/.cache/nodejs/pnpm/cache&quot; &amp;&amp; `</span><br><span class="line">pnpm config set store-dir &quot;F:/.cache/nodejs/pnpm/store&quot; &amp;&amp; `</span><br><span class="line">pnpm config set registry &quot;http://registry.npmmirror.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>查看当前配置：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm config list</span><br></pre></td></tr></table></figure></li><li><p>安装全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>移除全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm remove -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>查看全局依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm list -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>安装局部依赖（默认安装在当前项目根目录的node_modules下）:</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>移除局部依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm remove &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li><p>【仅记录，请忽略】原先默认的路径配置：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cache = &quot;C:/Users/userName/AppData/Local/pnpm&quot;</span><br><span class="line">prefix = &quot;C:/Users/userName/AppData/Local/pnpm&quot;</span><br></pre></td></tr></table></figure></li><li><p>获取缓存路径：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm store path</span><br></pre></td></tr></table></figure></li><li><p>清理缓存：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm store prune</span><br></pre></td></tr></table></figure></li></ul><h3 id="汇总需要手动配置到环境变量的目录："><a href="#汇总需要手动配置到环境变量的目录：" class="headerlink" title="汇总需要手动配置到环境变量的目录："></a>汇总需要手动配置到环境变量的目录：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%NVM_HOME%</span><br><span class="line">%NVM_SYMLINK%</span><br><span class="line">%PNPM_HOME%</span><br><span class="line">F:\.cache\nodejs\Yarn\Data\bin</span><br></pre></td></tr></table></figure><p>命令行方式添加（<a href="https://github.com/PowerShell/PowerShell/releases/tag/v7.4.5">powershell</a>下管理员权限）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setx PATH &quot;%PATH%;%NVM_HOME%;%NVM_SYMLINK%;%PNPM_HOME%;F:\.cache\nodejs\Yarn\Data\bin&quot; /M</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> nvm </tag>
            
            <tag> nodejs </tag>
            
            <tag> npm </tag>
            
            <tag> yarn </tag>
            
            <tag> pnpm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nuxt3的基础构建流程+常用插件安装</title>
      <link href="/2024/09/19/test-nuxt3-note/"/>
      <url>/2024/09/19/test-nuxt3-note/</url>
      
        <content type="html"><![CDATA[<p>Nuxt3可SSR渲染，对SEO友好。这里记录一下构建nuxt3项目的一些基础流程。</p><h2 id="nuxt3测试库的流程目录"><a href="#nuxt3测试库的流程目录" class="headerlink" title="nuxt3测试库的流程目录"></a>nuxt3测试库的流程目录</h2><ul><li><a href="#%E7%94%A8nvm%E5%AE%89%E8%A3%85node%E7%8E%AF%E5%A2%83">用nvm安装node环境+安装yarn</a></li><li><a href="#%E5%88%9B%E5%BB%BAnuxt%E9%A1%B9%E7%9B%AE">创建nuxt项目</a></li><li><a href="#%E6%B7%BB%E5%8A%A0UI%E6%A1%86%E6%9E%B6Vuetify">添加UI框架Vuetify</a></li><li><a href="#%E6%B7%BB%E5%8A%A0element-plus">添加element-plus</a></li><li><a href="#%E6%B7%BB%E5%8A%A0scss">添加scss</a></li><li><a href="#%E6%B7%BB%E5%8A%A0autoprefixer">添加autoprefixer</a></li><li><a href="#%E6%B7%BB%E5%8A%A0tailwindcss">添加tailwindcss</a></li><li><a href="#%E6%B7%BB%E5%8A%A0pinia">添加pinia</a></li><li><a href="#%E6%B7%BB%E5%8A%A0nuxt-icons">添加nuxt-icons</a></li><li><a href="#%E6%B7%BB%E5%8A%A0prettier%E5%92%8Ceslint">添加prettier和eslint</a></li><li><a href="#%E6%B7%BB%E5%8A%A0vue-i18n%E5%A4%9A%E8%AF%AD%E8%A8%80">添加vue-i18n多语言</a></li></ul><h3 id="用nvm安装node环境"><a href="#用nvm安装node环境" class="headerlink" title="用nvm安装node环境"></a>用nvm安装node环境</h3><p><a href="https://github.com/nvm-sh/nvm">点击查看nvm的github仓库&gt;&gt;</a></p><p><a href="https://github.com/coreybutler/nvm-windows">点击查看nvm-windows的github仓库（windows系统这这个）&gt;&gt;</a></p><ul><li><p>安装<code>nvm</code>后，用下面命令安装nodejs</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 20</span><br></pre></td></tr></table></figure></li><li><p>使用指定版本的nodejs</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use 20</span><br></pre></td></tr></table></figure></li><li><p>查看nodejs版本</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br></pre></td></tr></table></figure></li><li><p>安装yarn</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建nuxt项目"><a href="#创建nuxt项目" class="headerlink" title="创建nuxt项目"></a>创建nuxt项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx nuxi@latest init test-nuxt3</span><br></pre></td></tr></table></figure><p><img src="https://github.com/user-attachments/assets/f5e6f8e6-e045-4325-a010-d68beae8e6fa" alt="image"></p><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run dev</span><br></pre></td></tr></table></figure><p><img src="https://github.com/user-attachments/assets/7be4a5ac-1517-45f6-b9c0-dcc981372ab4" alt="image"></p><h3 id="添加UI框架Vuetify"><a href="#添加UI框架Vuetify" class="headerlink" title="添加UI框架Vuetify"></a>添加UI框架Vuetify</h3><p><a href="https://github.com/vuetifyjs/vuetify">点击查看Vuetify的github仓库&gt;&gt;</a></p><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add vuetify@next</span><br><span class="line">yarn add -D vuetify vite-plugin-vuetify</span><br><span class="line">yarn add @mdi/font</span><br></pre></td></tr></table></figure></li><li><p>创建 Vuetify 插件<br>项目根目录创建一个<code>plugins</code>文件夹，然后创建一个名为<code>vuetify.js</code>的文件</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir plugins</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建vuetify.js</span></span><br><span class="line">touch plugins/vuetify.js</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建vuetify.js</span></span><br><span class="line">New-Item -Path plugins/vuetify.js -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>vuetify.js</code>文件的内容：</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// plugins/vuetify.js</span><br><span class="line">import &#123; createVuetify &#125; from &#x27;vuetify&#x27;</span><br><span class="line">import &#x27;@mdi/font/css/materialdesignicons.css&#x27;</span><br><span class="line">import &#x27;vuetify/styles&#x27;</span><br><span class="line">import * as components from &#x27;vuetify/components&#x27;</span><br><span class="line">import * as directives from &#x27;vuetify/directives&#x27;</span><br><span class="line"></span><br><span class="line">export default defineNuxtPlugin(nuxtApp =&gt; &#123;</span><br><span class="line">const vuetify = createVuetify(&#123;</span><br><span class="line">    components,</span><br><span class="line">    directives,</span><br><span class="line">    ssr: true,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">nuxtApp.vueApp.use(vuetify)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>更新 <code>nuxt.config.ts</code> 中配置</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">// https://nuxt.com/docs/api/configuration/nuxt-config</span><br><span class="line">import vuetify, &#123; transformAssetUrls &#125; from &#x27;vite-plugin-vuetify&#x27;</span><br><span class="line"></span><br><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">compatibilityDate: &#x27;2024-09-19&#x27;,</span><br><span class="line">devtools: &#123; enabled: true &#125;,</span><br><span class="line">css: [</span><br><span class="line">    &#x27;@/node_modules/vuetify/lib/styles/main.css&#x27;,</span><br><span class="line">],</span><br><span class="line">build: &#123;</span><br><span class="line">    transpile: [&#x27;vuetify&#x27;],</span><br><span class="line">&#125;,</span><br><span class="line">modules:[</span><br><span class="line">    (_options, nuxt) =&gt; &#123;</span><br><span class="line">    nuxt.hooks.hook(&#x27;vite:extendConfig&#x27;, (config) =&gt; &#123;</span><br><span class="line">        // @ts-expect-error</span><br><span class="line">        config.plugins.push(vuetify(&#123; autoImport: true &#125;))</span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">],</span><br><span class="line">vite: &#123;</span><br><span class="line">    define: &#123;</span><br><span class="line">    &#x27;process.env.DEBUG&#x27;: false,</span><br><span class="line">    &#125;,</span><br><span class="line">    vue: &#123;</span><br><span class="line">    template: &#123;</span><br><span class="line">        transformAssetUrls,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>创建 测试页面</p><p>  项目根目录创建一个<code>pages</code>文件夹，然后创建一个名为<code>index.vue</code>跟<code>test.vue</code>的文件，测试vuetify的组件是否正常</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir pages</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch pages/index.vue</span><br><span class="line">touch pages/test.vue</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path pages/index.vue -ItemType File</span><br><span class="line">New-Item -Path pages/test.vue -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>index.vue</code>文件的内容：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;main&quot;&gt;</span><br><span class="line">        &lt;h1&gt;Hello World&lt;/h1&gt;</span><br><span class="line">        &lt;nuxt-link to=&quot;/test&quot; class=&quot;main&quot;&gt;test page&lt;/nuxt-link&gt; |</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>test.vue</code>文件的内容：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;v-btn color=&quot;success&quot; @click=&quot;showVuetifyToast&quot;&gt;Vuetify 按钮&lt;/v-btn&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        methods: &#123;</span><br><span class="line">            showVuetifyToast() &#123;</span><br><span class="line">                console.log(&quot;Vuetify 按钮 被点击了！&quot;);</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改<code>app.vue</code>文件的内容：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;NuxtPage /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改完毕后如果不能正常渲染，可重新运行<code>yarn run dev</code></p><p>  <img src="https://github.com/user-attachments/assets/d52534e4-e98f-432b-bb54-7cf5db8a578c" alt="image"><br>  <img src="https://github.com/user-attachments/assets/f861aad0-9514-42ac-8edd-6c400af56827" alt="image"></p></li></ul><h3 id="添加element-plus"><a href="#添加element-plus" class="headerlink" title="添加element-plus"></a>添加element-plus</h3><p>可选，<a href="https://github.com/element-plus/element-plus">点击查看element-plus的github仓库&gt;&gt;</a></p><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add element-plus @element-plus/nuxt</span><br></pre></td></tr></table></figure></li><li><p>更新 <code>nuxt.config.ts</code> 中配置（在<code>css</code>跟<code>modules</code>中追加<code>element-plus</code>的配置）</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">    // ... other configs</span><br><span class="line">    css: [</span><br><span class="line">        // ... other configs</span><br><span class="line">        &#x27;@/node_modules/element-plus/dist/index.css&#x27;,</span><br><span class="line">        &#x27;@/node_modules/element-plus/theme-chalk/display.css&#x27;,</span><br><span class="line">    ],</span><br><span class="line">    // ... other configs</span><br><span class="line">    modules:[</span><br><span class="line">        // ... other configs</span><br><span class="line">        &#x27;@element-plus/nuxt&#x27;,</span><br><span class="line">    ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在<code>test.vue</code>文件中增加<code>element-plus</code>的控件测试：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;showElementPlusToast&quot;&gt;Element Plus 按钮&lt;/el-button&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;v-btn color=&quot;success&quot; @click=&quot;showVuetifyToast&quot;&gt;Vuetify 按钮&lt;/v-btn&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        methods: &#123;</span><br><span class="line">            showElementPlusToast() &#123;</span><br><span class="line">                console.log(&quot;Element Plus 按钮 被点击了！&quot;);</span><br><span class="line">            &#125;,</span><br><span class="line">            showVuetifyToast() &#123;</span><br><span class="line">                console.log(&quot;Vuetify 按钮 被点击了！&quot;);</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>  <img src="https://github.com/user-attachments/assets/9351c51e-bb88-4fc0-b650-eb75f9dcac69" alt="image"></p></li></ul><h3 id="添加scss"><a href="#添加scss" class="headerlink" title="添加scss"></a>添加scss</h3><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add sass --dev</span><br></pre></td></tr></table></figure></li><li><p>新建<code>assets/css</code>目录并添加一个<code>common.scss</code>文件</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir assets/css</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch assets/css/common.scss</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path assets/css/common.scss -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>在<code>pages/index.vue</code>中引入<code>common.scss</code>文件</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;main&quot;&gt;</span><br><span class="line">        &lt;h1&gt;Hello World&lt;/h1&gt;</span><br><span class="line">        &lt;nuxt-link to=&quot;/test&quot; class=&quot;main&quot;&gt;test page&lt;/nuxt-link&gt; |</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    @import &#x27;../assets/css/common.scss&#x27;;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>如果需要全局引入，则需要更新 <code>nuxt.config.ts</code> 中配置（在<code>css</code>中追加<code>common.scss</code>）</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">    // ... other configs</span><br><span class="line">    css: [</span><br><span class="line">        // ... other configs</span><br><span class="line">        &#x27;@/assets/css/common.scss&#x27;,</span><br><span class="line">    ],</span><br><span class="line">    // ... other configs</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://github.com/user-attachments/assets/7409158c-8864-4de1-b84c-6e4c889f218f" alt="image"></p></li></ul><h3 id="添加autoprefixer"><a href="#添加autoprefixer" class="headerlink" title="添加autoprefixer"></a>添加autoprefixer</h3><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add autoprefixer --dev</span><br></pre></td></tr></table></figure></li><li><p>更新 <code>nuxt.config.ts</code> 中配置</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">    // ... other configs</span><br><span class="line">    postcss: &#123;</span><br><span class="line">        plugins:&#123;</span><br><span class="line">            // 自动添加浏览器前缀</span><br><span class="line">            autoprefixer: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // ... other configs</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="添加tailwindcss"><a href="#添加tailwindcss" class="headerlink" title="添加tailwindcss"></a>添加tailwindcss</h3><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add tailwindcss --dev</span><br></pre></td></tr></table></figure></li><li><p>更新 <code>nuxt.config.ts</code> 中配置</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">    // ... other configs</span><br><span class="line">    postcss: &#123;</span><br><span class="line">        plugins:&#123;</span><br><span class="line">            // ... other configs</span><br><span class="line">            // 预配置的tailwindcss，用于快速利用已有的组合css</span><br><span class="line">            tailwindcss: &#123;&#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // ... other configs</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在项目根目录创建 <code>tailwind.config.js</code></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch tailwind.config.js</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path tailwind.config.js -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>tailwind.config.js</code>文件的内容：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">content</span>: [</span><br><span class="line">        <span class="string">&quot;./components/**/*.&#123;js,vue,ts&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./layouts/**/*.vue&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./pages/**/*.vue&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./plugins/**/*.&#123;js,ts&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./nuxt.config.&#123;js,ts&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;./app.vue&quot;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">theme</span>: &#123;</span><br><span class="line">        <span class="attr">extend</span>: &#123;</span><br><span class="line">        <span class="attr">colors</span>: &#123;</span><br><span class="line">            <span class="attr">dark</span>: <span class="string">&quot;#000&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">screens</span>: &#123;&#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>修改 <code>common.scss</code> 支持 <code>tailwind</code></p>  <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@tailwind</span> base;</span><br><span class="line"><span class="keyword">@tailwind</span> components;</span><br><span class="line"><span class="keyword">@tailwind</span> utilities;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>pages/index.vue</code>中引入<code>tailwind</code>的样式进行测试</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;main&quot;&gt;</span><br><span class="line">        &lt;h1&gt;Hello World&lt;/h1&gt;</span><br><span class="line">        &lt;div class=&quot;bg-blue-400 text-white pt-4 pr-4 pb-4 pl-0&quot;&gt;测试tailwindcss样式&lt;/div&gt;</span><br><span class="line">        &lt;nuxt-link to=&quot;/test&quot; class=&quot;main&quot;&gt;test page&lt;/nuxt-link&gt; |</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    @import &#x27;../assets/css/common.scss&#x27;;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>  <img src="https://github.com/user-attachments/assets/88edf0e7-0903-420f-8179-e4ed616e29d4" alt="image"></p></li></ul><h3 id="添加pinia"><a href="#添加pinia" class="headerlink" title="添加pinia"></a>添加pinia</h3><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia</span><br><span class="line">yarn add @pinia/nuxt</span><br><span class="line">yarn add pinia-plugin-persist</span><br></pre></td></tr></table></figure></li><li><p>更新 <code>nuxt.config.ts</code> 中配置（在<code>modules</code>中追加<code>@pinia/nuxt</code>）</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">    // ... other configs</span><br><span class="line">    modules:[</span><br><span class="line">        // ... other configs</span><br><span class="line">        &#x27;@pinia/nuxt&#x27;,</span><br><span class="line">    ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>新建<code>store</code>目录并添加一个<code>index.ts</code>跟<code>user.ts</code>测试文件</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir store</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch store/index.ts</span><br><span class="line">touch store/user.ts</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path store/index.ts -ItemType File</span><br><span class="line">New-Item -Path store/user.ts -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>store/index.ts</code>文件的内容：</p>  <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> piniaPluginPersist <span class="keyword">from</span> <span class="string">&#x27;pinia-plugin-persist&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line">pinia.<span class="title function_">use</span>(piniaPluginPersist);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> pinia;</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>store/user.ts</code>文件的内容：</p>  <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;acceptHMRUpdate, defineStore&#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore =  <span class="title function_">defineStore</span>(<span class="string">&quot;user&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">token</span>: <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>) || <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;name&#x27;</span>) || <span class="string">&#x27;未登录&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="comment">// 用户登录</span></span><br><span class="line">        <span class="title function_">login</span>(<span class="params">data: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">setToken</span>(data);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 写入名字</span></span><br><span class="line">        <span class="title function_">setName</span>(<span class="params">data: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = data;</span><br><span class="line">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;name&#x27;</span>, data);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 单独更新或写入token</span></span><br><span class="line">        <span class="title function_">setToken</span>(<span class="params">data: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">token</span> = data;</span><br><span class="line">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;token&#x27;</span>, data);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 用户登出</span></span><br><span class="line">        <span class="title function_">logout</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;未登录&#x27;</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">token</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line">            <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">hot</span>) &#123;</span><br><span class="line">    <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">hot</span>.<span class="title function_">accept</span>(<span class="title function_">acceptHMRUpdate</span>(useStore, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">hot</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建<code>pages/teststore.vue</code>用于测试<code>pinia</code></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir pages</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch pages/teststore.vue</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path pages/teststore.vue -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>pages/teststore.vue</code>文件的内容：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;p-4 bg-blue-200&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;flex items-center space-x-0&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;changeName&quot; type=&quot;primary&quot; class=&quot;mr-2&quot; style=&quot;width: 100%; max-width: 100px;&quot;&gt;改变名称&lt;/el-button&gt;</span><br><span class="line">            &lt;span class=&quot;text-red-500&quot;&gt;&#123;&#123; store.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;flex items-center space-x-0 mt-4&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;setToken&quot; type=&quot;primary&quot; class=&quot;mr-2&quot; style=&quot;width: 100%; max-width: 100px;&quot;&gt;登录&lt;/el-button&gt;</span><br><span class="line">            &lt;span class=&quot;text-red-500&quot;&gt;&#123;&#123; store.token &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">    import &#123; useStore &#125; from &#x27;../store/user&#x27;</span><br><span class="line">    const store = useStore()</span><br><span class="line"></span><br><span class="line">    function changeName(): void &#123;</span><br><span class="line">        let name = `New Name $&#123;Math.random().toString(36).substr(2, 9)&#125;`</span><br><span class="line">        store.setName(name)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function setToken(): void &#123;</span><br><span class="line">        let token = `jwt-$&#123;Math.random().toString(36).substr(2, 9)&#125;`</span><br><span class="line">        store.setToken(token)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>在<code>pages/index.vue</code>中引入<code>teststore的页面路由</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;main&quot;&gt;</span><br><span class="line">        &lt;h1&gt;Hello World&lt;/h1&gt;</span><br><span class="line">        &lt;div class=&quot;bg-blue-400 text-white pt-4 pr-4 pb-4 pl-0&quot;&gt;测试tailwindcss样式&lt;/div&gt;</span><br><span class="line">        &lt;nuxt-link to=&quot;/test&quot; class=&quot;main&quot;&gt;test page&lt;/nuxt-link&gt; | </span><br><span class="line">        &lt;nuxt-link to=&quot;/teststore&quot; class=&quot;main&quot;&gt;teststore page&lt;/nuxt-link&gt; | </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    @import &#x27;../assets/css/common.scss&#x27;;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>  <img src="https://github.com/user-attachments/assets/909f783c-65be-4682-9ebd-aaa7f2641eb7" alt="image"><br>  <img src="https://github.com/user-attachments/assets/5e51e490-32cc-4b32-aaf6-275f06ca8eb8" alt="image"></p></li></ul><h3 id="添加nuxt-icons"><a href="#添加nuxt-icons" class="headerlink" title="添加nuxt-icons"></a>添加nuxt-icons</h3><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add nuxt-icons</span><br></pre></td></tr></table></figure></li><li><p>更新 <code>nuxt.config.ts</code> 中配置（在<code>modules</code>中追加<code>nuxt-icons</code>）</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">    // ... other configs</span><br><span class="line">    modules:[</span><br><span class="line">        // ... other configs</span><br><span class="line">        &#x27;nuxt-icons&#x27;,</span><br><span class="line">    ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>新建<code>assets/icons/test.svg</code>图标文件用于测试图标的加载</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir assets/icons</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch assets/icons/test.svg</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path assets/icons/test.svg -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>assets/icons/test.svg</code>文件的内容：</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> standalone=<span class="string">&quot;no&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">svg</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD SVG 1.1//EN&quot;</span> <span class="string">&quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">&quot;1726725370708&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;891&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xlink</span>=<span class="string">&quot;http://www.w3.org/1999/xlink&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">        <span class="attr">d</span>=<span class="string">&quot;M512 85.504c235.52 0 426.496 190.976 426.496 426.496S747.52 938.496 512 938.496 85.504 747.52 85.504 512 276.48 85.504 512 85.504z m0 84.992c-188.416 0-341.504 152.576-341.504 341.504s152.576 341.504 341.504 341.504c188.416 0 341.504-153.088 341.504-341.504 0-188.416-153.088-341.504-341.504-341.504z m-40.448 156.672l121.856 369.664H509.44l-27.136-89.6H361.984l-27.648 89.6H256l122.368-369.664h93.184z m256 0v369.664h-78.336V327.168h78.336zM424.448 402.944h-3.584L377.344 547.84h90.112l-43.008-144.896z&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">p-id</span>=<span class="string">&quot;892&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#1296db&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;currentColor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在<code>pages/index.vue</code>中引入<code>nuxt-icon</code>控件</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;nuxt-icon name=&quot;test&quot; class=&quot;text-[100px]&quot; filled/&gt;</span><br></pre></td></tr></table></figure><p>  <img src="https://github.com/user-attachments/assets/0cdf4684-f589-40c9-8b1f-9916e0d167bf" alt="image"></p></li><li><p>备注说明</p><ul><li><a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a></li><li>需要在 svg中使用<code>fill=&quot;currentColor&quot;</code> + nuxt-icon中配置<code>filled</code> 才能使用svg原始颜色，否则svg的颜色值会被父级的颜色配置覆盖</li></ul></li></ul><h3 id="添加prettier和eslint"><a href="#添加prettier和eslint" class="headerlink" title="添加prettier和eslint"></a>添加prettier和eslint</h3><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint eslint-config-prettier eslint-plugin-prettier prettier eslint-plugin-vue typescript --dev</span><br></pre></td></tr></table></figure></li><li><p>在根目录新建<code>.eslintrc.js</code>、<code>.prettierignore</code>、<code>.prettierrc.js</code></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch .eslintrc.js</span><br><span class="line">touch .prettierignore</span><br><span class="line">touch .prettierrc.js</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path .eslintrc.js -ItemType File</span><br><span class="line">New-Item -Path .prettierignore -ItemType File</span><br><span class="line">New-Item -Path .prettierrc.js -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>.eslintrc.js</code>文件的内容：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">root</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">parser</span>: <span class="string">&#x27;vue-eslint-parser&#x27;</span>,</span><br><span class="line">    <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">    <span class="attr">parser</span>: <span class="string">&#x27;@typescript-eslint/parser&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">extends</span>: [<span class="string">&#x27;plugin:vue/vue3-recommended&#x27;</span>, <span class="string">&#x27;plugin:prettier/recommended&#x27;</span>],</span><br><span class="line">    <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;vue/no-v-html&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;vue/v-on-event-hyphenation&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;vue/no-template-shadow&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;vue/no-setup-props-destructure&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;@intlify/vue-i18n/no-html-messages&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;vue/multi-word-component-names&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>.prettierignore</code>文件的内容：</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/dist</span><br><span class="line">/node_modules</span><br><span class="line">*.yml</span><br><span class="line">*.yaml</span><br><span class="line">tsconfig.json</span><br><span class="line">*.svg</span><br><span class="line">*.png</span><br><span class="line">*.jpg</span><br><span class="line">*.jpeg</span><br><span class="line">*.scss</span><br><span class="line">*.gif</span><br><span class="line">*.webp</span><br><span class="line">*.ttf</span><br><span class="line">index.html</span><br><span class="line">*.md</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>.prettierrc.js</code>文件的内容：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">singleQuote</span>: <span class="literal">true</span>, <span class="comment">// 使用单引号代替双引号</span></span><br><span class="line">    <span class="attr">printWidth</span>: <span class="number">200</span>, <span class="comment">// 超过最大值换行</span></span><br><span class="line">    <span class="attr">semi</span>: <span class="literal">false</span>, <span class="comment">// 结尾不使用分号</span></span><br><span class="line">    <span class="attr">useTabs</span>: <span class="literal">true</span>, <span class="comment">// 缩进使用 tab，不使用空格</span></span><br><span class="line">    <span class="attr">tabWidth</span>: <span class="number">4</span>, <span class="comment">// tab 样式宽度</span></span><br><span class="line">    <span class="attr">bracketSpacing</span>: <span class="literal">true</span>, <span class="comment">// 对象数组，文字间加空格 &#123;a: 1&#125; =&gt; &#123; a: 1 &#125;</span></span><br><span class="line">    <span class="attr">arrowParens</span>: <span class="string">&#x27;avoid&#x27;</span>, <span class="comment">// 如果可以，自动去除括号 (x) =&gt; x 变为 x =&gt; x</span></span><br><span class="line">    <span class="attr">proseWrap</span>: <span class="string">&#x27;preserve&#x27;</span>, <span class="comment">// 保持原样</span></span><br><span class="line">    <span class="attr">htmlWhitespaceSensitivity</span>: <span class="string">&#x27;ignore&#x27;</span>, <span class="comment">// 忽略 HTML 空格敏感度</span></span><br><span class="line">    <span class="attr">trailingComma</span>: <span class="string">&#x27;all&#x27;</span>, <span class="comment">// 尾随逗号</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="添加vue-i18n多语言"><a href="#添加vue-i18n多语言" class="headerlink" title="添加vue-i18n多语言"></a>添加vue-i18n多语言</h3><p><a href="https://i18n.nuxtjs.org/docs/getting-started/">点击查看 i18n.nuxtjs 文档&gt;&gt;</a></p><ul><li><p>添加依赖</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx nuxi@latest module add i18n</span><br></pre></td></tr></table></figure><p>  执行后可能会遇到下图那样的错误提示，不需要在意，一会手动在 <code>nuxt.config.ts</code> 中追加 <code>i18n</code> 的配置即可<br>  <img src="https://github.com/user-attachments/assets/b67a3543-f3d8-4ed6-9118-d1923b6f5c0b" alt="image"></p></li><li><p>更新 <code>nuxt.config.ts</code> 中配置（在<code>modules</code>中追加<code>@nuxtjs/i18n</code>）</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line">    // ... other configs</span><br><span class="line">    modules:[</span><br><span class="line">        // ... other configs</span><br><span class="line">        &#x27;@nuxtjs/i18n&#x27;,</span><br><span class="line">    ],</span><br><span class="line">    i18n: &#123;</span><br><span class="line">        vueI18n: &#x27;./i18n.config.ts&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    // ... other configs</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在项目根目录新建<code>i18n.config.ts</code>文件，用于配置多语言，并添加默认语言</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch i18n.config.ts</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path i18n.config.ts -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>i18n.config.ts</code>文件的内容：</p>  <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> en <span class="keyword">from</span> <span class="string">&quot;./assets/lang/en_us.json&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> zh <span class="keyword">from</span> <span class="string">&quot;./assets/lang/zh_cn.json&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineI18nConfig</span>(<span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">legacy</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">locale</span>: <span class="string">&#x27;en&#x27;</span>,</span><br><span class="line">    <span class="attr">messages</span>: &#123;</span><br><span class="line">    <span class="attr">en</span>: en,</span><br><span class="line">    <span class="attr">zh</span>: zh</span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure></li><li><p>创建<code>assets/lang/en_us.json</code>和<code>assets/lang/zh_cn.json</code>文件，用于配置多语言</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建目录</span></span><br><span class="line">mkdir assets/lang</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch assets/lang/en_us.json</span><br><span class="line">touch assets/lang/zh_cn.json</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path assets/lang/en_us.json -ItemType File</span><br><span class="line">New-Item -Path assets/lang/zh_cn.json -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>assets/lang/en_us.json</code>文件的内容：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;please input name&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">- 粘贴`assets/lang/zh_cn.json`文件的内容：</span><br><span class="line">    ```json</span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;please input name&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>创建<code>pages/testlang.vue</code>页面文件，用于测试多语言效果</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建目录</span></span><br><span class="line">mkdir pages</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux下创建</span></span><br><span class="line">touch pages/testlang.vue</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">windows下创建</span></span><br><span class="line">New-Item -Path pages/testlang.vue -ItemType File</span><br></pre></td></tr></table></figure></li><li><p>粘贴<code>pages/testlang.vue</code>文件的内容：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">    const <span class="punctuation">&#123;</span> locale<span class="punctuation">,</span> setLocale <span class="punctuation">&#125;</span> = useI18n()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;p-4 bg-blue-300&quot;</span>&gt;</span><br><span class="line">        &lt;p class=<span class="string">&quot;text-2xl mb-4&quot;</span>&gt;语言切换测试：&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">        &lt;v-btn color=<span class="string">&quot;info&quot;</span> @click=<span class="string">&quot;setLocale(&#x27;en&#x27;)&quot;</span> class=<span class="string">&quot;mr-2&quot;</span>&gt;English&lt;/v-btn&gt; | </span><br><span class="line">        &lt;v-btn color=<span class="string">&quot;success&quot;</span> @click=<span class="string">&quot;setLocale(&#x27;zh&#x27;)&quot;</span> class=<span class="string">&quot;ml-2&quot;</span>&gt;中文&lt;/v-btn&gt;</span><br><span class="line"></span><br><span class="line">        &lt;p class=<span class="string">&quot;mt-4&quot;</span>&gt;文本结果：&lt;span class=<span class="string">&quot;text-red-600&quot;</span>&gt;<span class="punctuation">&#123;</span><span class="punctuation">&#123;</span> $t(&#x27;name&#x27;) <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>&lt;/span&gt; (<span class="punctuation">&#123;</span><span class="punctuation">&#123;</span> locale <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>)&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li><li><p>在<code>pages/index.vue</code>文件中追加<code>testlang</code>页面的入口：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;nuxt-link to=&quot;/testlang&quot; class=&quot;main&quot;&gt;testlang page&lt;/nuxt-link&gt;</span><br></pre></td></tr></table></figure><p>  <img src="https://github.com/user-attachments/assets/c2881a91-948a-4eb4-986c-7ff35557f185" alt="image"><br>  <img src="https://github.com/user-attachments/assets/3d8867d8-ec68-4088-bfba-f5e2ecbfe59f" alt="image"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> nvm </tag>
            
            <tag> nuxt </tag>
            
            <tag> ssr </tag>
            
            <tag> Vuetify </tag>
            
            <tag> element-plus </tag>
            
            <tag> scss </tag>
            
            <tag> autoprefixer </tag>
            
            <tag> tailwindcss </tag>
            
            <tag> pinia </tag>
            
            <tag> nuxt-icons </tag>
            
            <tag> prettier </tag>
            
            <tag> eslint </tag>
            
            <tag> vue-i18n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜间EMO时刻：时间的雕刻-自我探索的命运低语</title>
      <link href="/2024/09/16/youxirensheng/"/>
      <url>/2024/09/16/youxirensheng/</url>
      
        <content type="html"><![CDATA[<p>时间，这个无形的雕刻家，悄无声息地在生命之树上刻下一圈又一圈的年轮。回望老同学明x与思x的婚姻，如同岁月的见证，已悄然走过了N载春秋。而我，也在这时间的长河中，不知不觉地与青涩的学生时代渐行渐远，仿佛是两个世界的存在。</p><p>时间，它似乎自带欺骗性，让我们在不经意间，就从青春的巅峰滑落，步入了中年的门槛。看着他们的生活轨迹，不禁反思自己的生活，是否在不知不觉中，走向了一条越来越狭窄的道路。</p><p>曾经，我怀揣着技术的梦想，渴望在代码的世界里，打通前后端全栈的任督二脉。而现在，我更渴望的是财富的自由，这是每个阶段不同的追求，也是我们不断变化的自我。未来，或许在婚姻的殿堂中，我又会有不同的渴望，不同的追求。人生，就像是一场攀登，每个人都在攀登着不同的高峰，欣赏着各自路上的风景。</p><p>我深知，自己的拖延症严重，但也只能慢慢来，慢慢地，岁月流逝，最终的结局可能是一无所有。我时长感到莫名的悲观，或许是因为一直看不到希望，而这种无望又削弱了我的动力，形成了一个恶性循环。我可能太过功利，一旦看不到明显的回报，就容易自我怀疑，甚至自暴自弃。但同时我偶尔又是那么的纯粹，对于一些喜爱之事，会不计代价地去追寻与探索。</p><p>我感觉自己正往荒野走去，一路上没有看到同行者，或许是因为自己太独来独往了。我不是神明，那我便是野兽（两脚兽）。我希望能够调整自己的方向，希望命运能给予我一些正面的反馈。我是一个懒惰而懦弱的人，动力不足，有时候做过一些尝试过后，就像是游戏中角色的蓝条耗尽，需要时间来恢复。不是我不想行动，而是有时候，我真的力不从心。</p><p>或许，我应该认识到，当我情绪低落，斗志不高时，并不是因为我不行，而是因为我需要时间来恢复能量。在这段时间间隙里，我可以探索其他的可能性，等待能量的恢复，然后再继续尝试。同时，我也需要意识到，每个人都有不同的属性，有的人在某些方面有着天生的优势。我不应该简单地将自己劣势与他人的优势比较，而应该思考如何提升自己的属性，通过刻意练习，提高自己的能力。</p><p>人生，就像游戏一样，没有绝对的公平。无论是现实还是虚拟世界，总有人能够通过金钱来提升自己的属性，快速升级、学习高级技能、获得顶级装备、更早地获取更多的资源。马太效应无处不在，两极分化的现象不断上演，繁荣与衰败的故事，千古不衰。这就是现实，这就是我们所处的世界。在这个不平等的游戏中，我们每个人都在自己的道路上，寻找着自己的意义和价值。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 时间流逝 </tag>
            
            <tag> 人生轨迹 </tag>
            
            <tag> 财富自由 </tag>
            
            <tag> 拖延与动力 </tag>
            
            <tag> 自我怀疑 </tag>
            
            <tag> 能量恢复 </tag>
            
            <tag> 属性提升 </tag>
            
            <tag> 人生攀登 </tag>
            
            <tag> 马太效应 </tag>
            
            <tag> 现实认知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几款数据集管理&amp;实验跟踪的工具备忘</title>
      <link href="/2024/09/12/ai-datas-tools/"/>
      <url>/2024/09/12/ai-datas-tools/</url>
      
        <content type="html"><![CDATA[<ol><li><p><strong>DVC</strong>（Data Version Control）提供了强大的数据集版本控制和与 Git 的无缝集成，适合大规模数据管理和实验追踪。</p></li><li><p><strong>Weights &amp; Biases (W&amp;B)</strong> 和 <strong>MLflow</strong> 是实验管理的利器，支持详细的实验跟踪和可视化，帮助用户优化模型训练。</p></li><li><p><strong>Hugging Face Datasets</strong> 和 <strong>TensorFlow Datasets</strong> 专注于文本数据处理，特别适合 NLP 任务和 TensorFlow 环境。</p></li><li><p><strong>Snorkel</strong> 利用弱监督学习自动化标注数据集，减少人工标注的工作量。</p></li><li><p><strong>Pachyderm</strong> 和 <strong>Dagster</strong> 适合复杂的数据处理和分布式工作流管理，支持大规模数据集和多框架集成。</p></li><li><p><strong>Polyaxon</strong> 提供了强大的分布式实验管理功能，而 <strong>OpenML</strong> 则专注于数据和实验的共享与追踪。</p></li></ol><hr><table><thead><tr><th>工具&#x2F;项目</th><th>主要特点</th><th>官网</th><th>GitHub 地址</th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>DVC (Data Version Control)</strong></td><td>- 数据集版本控制<br>- 与 Git 集成<br>- 支持大规模文本数据管理<br>- 与云存储集成</td><td><a href="https://dvc.org/">https://dvc.org/</a></td><td><a href="https://github.com/iterative/dvc">https://github.com/iterative/dvc</a></td><td>- 强大的数据版本控制<br>- 与 Git 无缝集成</td><td>- 复杂项目设置可能需要额外学习曲线</td><td>- 大规模文本数据管理<br>- 实验和数据集版本追踪</td></tr><tr><td><strong>Weights &amp; Biases (W&amp;B)</strong></td><td>- 实验跟踪和可视化<br>- 数据集和实验版本控制<br>- 支持主流 ML 框架<br>- 自动记录训练过程</td><td><a href="https://wandb.com/">https://wandb.com/</a></td><td><a href="https://github.com/wandb/client">https://github.com/wandb/client</a></td><td>- 自动化实验记录和可视化<br>- 简单的 UI</td><td>- 需要联网才能使用完整功能</td><td>- 实验追踪和可视化<br>- 适合频繁的实验调整</td></tr><tr><td><strong>MLflow</strong></td><td>- 实验、超参数管理<br>- 模型和数据集版本控制<br>- 支持多种 ML 框架</td><td><a href="https://mlflow.org/">https://mlflow.org/</a></td><td><a href="https://github.com/mlflow/mlflow">https://github.com/mlflow/mlflow</a></td><td>- 简洁的实验管理<br>- 跨框架支持</td><td>- UI 界面较简单<br>- 初学者设置稍复杂</td><td>- 适用于多框架的实验管理和模型追踪</td></tr><tr><td><strong>Hugging Face Datasets</strong></td><td>- 快速加载和处理 NLP 数据集<br>- 与 Transformers 集成<br>- 支持分布式处理</td><td><a href="https://huggingface.co/docs/datasets/">https://huggingface.co/docs/datasets/</a></td><td><a href="https://github.com/huggingface/datasets">https://github.com/huggingface/datasets</a></td><td>- 丰富的 NLP 数据集<br>- 与 Transformers 集成</td><td>- 主要适用于 NLP 任务<br>- 对非 NLP 数据支持有限</td><td>- NLP 模型微调<br>- 数据集加载和管理</td></tr><tr><td><strong>Snorkel</strong></td><td>- 自动化文本标注<br>- 弱监督学习生成大规模数据集<br>- 减少人工标注需求</td><td><a href="https://snorkel.org/">https://snorkel.org/</a></td><td><a href="https://github.com/snorkel-team/snorkel">https://github.com/snorkel-team/snorkel</a></td><td>- 自动化标注大幅减少人工工作量<br>- 支持弱监督学习</td><td>- 需要编写自定义标注函数<br>- 高质量标注依赖于规则准确性</td><td>- 自动化生成标注数据集<br>- 适合需要大规模标注的任务</td></tr><tr><td><strong>TensorFlow Datasets (TFDS)</strong></td><td>- 内置大量 NLP 数据集<br>- 与 TensorFlow 集成<br>- 高效数据加载</td><td><a href="https://www.tensorflow.org/datasets">https://www.tensorflow.org/datasets</a></td><td><a href="https://github.com/tensorflow/datasets">https://github.com/tensorflow/datasets</a></td><td>- 原生集成 TensorFlow<br>- 支持多种数据格式</td><td>- 与 TensorFlow 深度绑定<br>- 对其他框架支持有限</td><td>- 适用于使用 TensorFlow 的数据加载与预处理</td></tr><tr><td><strong>Pachyderm</strong></td><td>- 数据集版本控制<br>- 容器化的工作流管理<br>- 分布式数据处理</td><td><a href="https://www.pachyderm.com/">https://www.pachyderm.com/</a></td><td><a href="https://github.com/pachyderm/pachyderm">https://github.com/pachyderm/pachyderm</a></td><td>- 分布式处理和版本控制<br>- 支持大规模数据处理</td><td>- 学习曲线较陡峭<br>- 初期配置复杂</td><td>- 适合处理复杂、分布式的数据工作流</td></tr><tr><td><strong>Dagster</strong></td><td>- 强大的数据追踪功能<br>- 管理复杂数据管道<br>- 支持多种 ML 框架</td><td><a href="https://dagster.io/">https://dagster.io/</a></td><td><a href="https://github.com/dagster-io/dagster">https://github.com/dagster-io/dagster</a></td><td>- 强大的管道管理和数据追踪功能<br>- 支持可视化</td><td>- 对初学者复杂<br>- 需要较多配置</td><td>- 管理复杂的数据处理工作流<br>- 多框架集成</td></tr><tr><td><strong>Polyaxon</strong></td><td>- 实验管理<br>- 数据集和模型版本控制<br>- 分布式工作流和容器化训练管道</td><td><a href="https://polyaxon.com/">https://polyaxon.com/</a></td><td><a href="https://github.com/polyaxon/polyaxon">https://github.com/polyaxon/polyaxon</a></td><td>- 强大的分布式实验管理<br>- 支持容器化工作流</td><td>- 设置较复杂<br>- 对小型项目可能过于复杂</td><td>- 适用于大规模分布式训练和实验管理</td></tr><tr><td><strong>OpenML</strong></td><td>- 开放的机器学习实验和数据集共享平台<br>- 支持多种数据格式<br>- 实验结果追踪</td><td><a href="https://www.openml.org/">https://www.openml.org/</a></td><td><a href="https://github.com/openml/OpenML">https://github.com/openml/OpenML</a></td><td>- 数据和实验共享方便<br>- 强大的实验追踪</td><td>- 数据隐私问题（公开共享数据）<br>- 支持的私有项目有限</td><td>- 适合共享数据集和实验结果<br>- 开放研究项目</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 数据管理 </tag>
            
            <tag> 实验跟踪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 ms-swift 框架微调 Qwen1.5-7B-chat 模型并转换为 Ollama 支持格式的实践</title>
      <link href="/2024/09/11/ms-swfit-ft-qwen1half-7b-chat-ruozhiba-llamacpp-ollama/"/>
      <url>/2024/09/11/ms-swfit-ft-qwen1half-7b-chat-ruozhiba-llamacpp-ollama/</url>
      
        <content type="html"><![CDATA[<p>本文仅用于记录使用<a href="https://github.com/modelscope/ms-swift">ms-swift</a>框架对<a href="https://www.modelscope.cn/models/qwen/qwen1.5-7b-chat">Qwen1.5-7B-chat</a>模型+<a href="https://www.modelscope.cn/datasets/AI-ModelScope/ruozhiba/dataPeview">ruozhiba</a>数据集进行微调，使用<a href="https://github.com/ggerganov/llama.cpp">llama.cpp</a>将合并后的微调模型转为Ollama支持格式（.gguf）+int4量化，以便在低资源设备上高效推理。</p><p>主要流程为：</p><ul><li>ms-swift多卡训练配置</li><li>LoRA微调&amp;LoRA合并</li><li>int4量化</li><li>编译llama.cpp</li><li>构建ollama的Modelfile</li><li>构建ollama模型并上传</li></ul><p>本文为 <code>ms-swift</code> 框架微调后转为<code>ollama</code>模型的练习过程记录。</p><p>运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run samge/qwen1half-7b-chat-ruozhiba:int4</span><br></pre></td></tr></table></figure><hr><h1 id="Qwen1-5-7B-chat-模型微调、转换与量化笔记"><a href="#Qwen1-5-7B-chat-模型微调、转换与量化笔记" class="headerlink" title="Qwen1.5-7B-chat 模型微调、转换与量化笔记"></a>Qwen1.5-7B-chat 模型微调、转换与量化笔记</h1><p>本说明文档将引导您通过 <code>ms-swift</code> 对 Qwen-7B 大模型进行自定义数据集微调、量化处理以及转换为 <code>Ollama</code> 格式以便进行推理。涉及的操作环境为 Windows 和 3090 单卡。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul><li><a href="#%E5%BE%AE%E8%B0%83-Qwen-7B-%E6%A8%A1%E5%9E%8B">微调 Qwen-7B 模型</a></li><li><a href="#%E5%90%88%E5%B9%B6-lora-%E5%B9%B6%E8%BF%9B%E8%A1%8C%E9%87%8F%E5%8C%96">合并 LoRA 并进行量化</a></li><li><a href="#%E7%BC%96%E8%AF%91-llamacpp">编译 llama.cpp</a></li><li><a href="#%E8%BD%AC%E6%8D%A2%E6%A8%A1%E5%9E%8B%E8%87%B3-ollama">转换模型至 Ollama</a></li><li><a href="#%E6%8E%A8%E7%90%86%E4%B8%8E%E9%87%8F%E5%8C%96">推理与量化</a></li></ul><hr><h3 id="微调-Qwen-7B-模型"><a href="#微调-Qwen-7B-模型" class="headerlink" title="微调 Qwen-7B 模型"></a>微调 Qwen-7B 模型</h3><ol><li><p>配置多卡训练（linux下使用的命令，这里单卡，没用到）：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MKL_THREADING_LAYER=GNU</span><br><span class="line">CUDA_VISIBLE_DEVICES=0,1,2,3 </span><br><span class="line">NPROC_PER_NODE=4</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>ms-swift</code> 进行微调（自行根据官方文档安装ms-swift环境）：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CUDA_VISIBLE_DEVICES=0 \</span><br><span class="line">swift sft --model_type qwen1half-7b-chat \</span><br><span class="line">    --model_id_or_path /root/.cache/modelscope/qwen/Qwen1___5-7B-Chat \</span><br><span class="line">    --sft_type lora \</span><br><span class="line">    --dtype AUTO \</span><br><span class="line">    --dataset AI-ModelScope/ruozhiba \</span><br><span class="line">    --self_cognition_sample 3000 \</span><br><span class="line">    --model_name 山姆模型 <span class="string">&#x27;Samge Model&#x27;</span> \</span><br><span class="line">    --model_author 山姆 Samge \</span><br><span class="line">    --num_train_epochs 3 \</span><br><span class="line">    --lora_rank 8 \</span><br><span class="line">    --lora_alpha 32 \</span><br><span class="line">    --lora_dropout_p 0.05 \</span><br><span class="line">    --lora_target_modules ALL \</span><br><span class="line">    --gradient_checkpointing <span class="literal">false</span> \</span><br><span class="line">    --batch_size 4 \</span><br><span class="line">    --weight_decay 0.05 \</span><br><span class="line">    --learning_rate 5e-5 \</span><br><span class="line">    --gradient_accumulation_steps 4 \</span><br><span class="line">    --output_dir output</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>ms-swift</code> 进行推理（自行根据官方文档安装ms-swift环境）：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUDA_VISIBLE_DEVICES=0 swift infer --ckpt_dir output/qwen1half-7b-chat/v2-20240910-185715/checkpoint-16461</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="合并-LoRA-并进行量化"><a href="#合并-LoRA-并进行量化" class="headerlink" title="合并 LoRA 并进行量化"></a>合并 LoRA 并进行量化</h3><ol><li><p>合并 LoRA 并导出模型：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUDA_VISIBLE_DEVICES=0 swift <span class="built_in">export</span> --ckpt_dir output/qwen1half-7b-chat/v2-20240910-185715/checkpoint-16461 --merge_lora <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>（可选）进行 int4 量化（可选择用llama.cpp转为.gguf后再量化）：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUDA_VISIBLE_DEVICES=0 swift <span class="built_in">export</span> --ckpt_dir output/qwen1half-7b-chat/v2-20240910-185715/checkpoint-16461 --quant_bits 4 --quant_method awq --merge_lora <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="编译-llama-cpp"><a href="#编译-llama-cpp" class="headerlink" title="编译 llama.cpp"></a>编译 llama.cpp</h3><ol><li><p>下载并解压 w64devkit（Windows 环境下编译 llama.cpp 必需工具）：</p><ul><li>下载地址：<a href="https://github.com/skeeto/w64devkit/releases">https://github.com/skeeto/w64devkit/releases</a></li><li>推荐使用 1.2.0 版本，避免安全软件报毒问题。</li></ul></li><li><p>克隆 <code>llama.cpp</code> 仓库并进行编译：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ggerganov/llama.cpp</span><br><span class="line"><span class="built_in">cd</span> llama.cpp</span><br><span class="line"><span class="comment"># make操作需要用w64devkit进行</span></span><br><span class="line">make -j</span><br></pre></td></tr></table></figure></li><li><p>创建并激活 llama.cpp的Python 环境：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda create --name llamacpp python=3.10.13 -y</span><br><span class="line">conda activate llamacpp</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="转换模型至-Ollama"><a href="#转换模型至-Ollama" class="headerlink" title="转换模型至 Ollama"></a>转换模型至 Ollama</h3><ol><li><p>转换 <code>safetensors</code> 模型为 Ollama 格式：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python convert_hf_to_gguf.py D:/Space/PRO/ai/ms-swift-train/output/qwen1half-7b-chat/v2-20240910-185715/checkpoint-16461-merged-default --outtype f16</span><br></pre></td></tr></table></figure></li><li><p>编写 <code>Modelfile</code> 文件：</p> <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM D:/Space/PRO/ai/ms-swift-train/output/qwen1half-7b-chat/v2-20240910-185715/checkpoint-16461-merged-default/Checkpoint-16461-Merged-Default-7.7B-F16.gguf</span><br></pre></td></tr></table></figure></li><li><p>创建 Ollama 模型：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama create samge/qwen1half-7b-chat-ruozhiba:fp16 -f Modelfile</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="推理与量化"><a href="#推理与量化" class="headerlink" title="推理与量化"></a>推理与量化</h3><ol><li><p>使用 Ollama 运行并测试模型：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run samge/qwen1half-7b-chat-ruozhiba:fp16</span><br></pre></td></tr></table></figure></li><li><p>推送模型至 Ollama：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama push samge/qwen1half-7b-chat-ruozhiba:fp16</span><br></pre></td></tr></table></figure></li><li><p>（可选）进行 int4 量化：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./llama-quantize D:/Space/PRO/ai/ms-swift-train/output/qwen1half-7b-chat/v2-20240910-185715/checkpoint-16461-merged-default/Checkpoint-16461-Merged-Default-7.7B-F16.gguf D:/Space/PRO/ai/ms-swift-train/output/qwen1half-7b-chat/v2-20240910-185715/checkpoint-16461-merged-default/Checkpoint-16461-Merged-Default-7.7B-q4_0.gguf q4_0</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><ul><li>量化为 <code>int4</code> 可大幅降低模型大小，适用于低资源设备推理。</li><li>使用 <code>ollama</code> 进行模型创建和推理可以方便模型在不同平台上的部署。</li></ul><hr><h3 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h3><p><img src="https://ollama.com/assets/samge/qwen1half-7b-chat-ruozhiba/03031f9d-2e9b-429e-952c-db13a8dd067b" alt="image.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ms-swift </tag>
            
            <tag> Qwen1.5-7B-chat </tag>
            
            <tag> LoRA微调 </tag>
            
            <tag> int4量化 </tag>
            
            <tag> llama.cpp </tag>
            
            <tag> Ollama </tag>
            
            <tag> 多卡训练 </tag>
            
            <tag> 模型格式转换 </tag>
            
            <tag> 量化推理 </tag>
            
            <tag> w64devkit </tag>
            
            <tag> ruozhiba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个奇异的梦：在魔法世界中的禁飞惩罚</title>
      <link href="/2024/09/08/Dream-The-Year-of-Flightless/"/>
      <url>/2024/09/08/Dream-The-Year-of-Flightless/</url>
      
        <content type="html"><![CDATA[<p>昨晚做了一个奇特的梦，在梦里我进入了一个魔法世界。一开始的场景是我的老家田野，我似乎在进行“御龙术”，先是升空，然后放出龙之残魂，在空中驾驭龙飞行。然而，这些法术在当地被认为是不务正业的，因为这些能力无法带来收入。</p><p>我降落到一块田埂上，拿出成功驯化的两个像风火轮的物品。这时，我在路上遇到认识的人，打了个招呼，但他们似乎在窃窃私语我。我踩着风火轮飞走，在空中快速飞行，感觉像是在自由地“跳舞”。</p><p>随着场景的变换，我来到了一座类似于《哈利波特》中魔法学院的地方。时间已经是傍晚，我在校园的空中和建筑物之间自由飞行。飞行途中，我偶遇一个认识的人，但感觉尴尬便没有打招呼，反而选择在空中急停，换了一条其他路线。</p><p>这次急停后，我脚下的风火轮突然变成了蔬菜水果，其中右脚的那个变成了番茄，番茄还裂开了，汁液滴落。我担心番茄汁滴到路人，便决定找个地方降落，把裂开的番茄换掉。</p><p>就在我换好番茄重新升空时，不小心飞过了一个魔法比赛的场地，而比赛场地对飞行高度有严格要求。我不确定高度限制，便尽可能地飞高，但最终还是被发现了，观众们注意到了我的出现。</p><p>当我飞到看不清底部人群的高度时，突然有两个女生拦住了我，说我违反了学校的规章制度，要求我跟她们去见老师。感觉她们没有恶意，心想我也没造成什么恶劣的影响，便决定跟她们走一趟。我们降到地面，走到老师那里，两个女生热得满头大汗，我不知道为什么不能飞过去而必须走过去，期间还开玩笑缓解气氛，用手帮她们扇风。</p><p>到了老师那里，右边的女生向老师汇报了情况。老师查看了学校规定和我的飞行高度，然后对我说，比赛场地飞行高度不能低于38米，而我被拦住时的高度刚好是38米。我心中暗喜，觉得自己应该不会被为难吧。</p><p>然而，老师话锋一转，说我被拦住时是38米，但拦截前可能低于38米，所以仍然违反了规定。我顿时愣住，心里想着自己真倒霉，不过认为没造成什么影响，便侥幸问老师违反规定会受到什么惩罚。老师和师娘相视一笑，轻轻说道：</p><p>“也不是很严重，就是限飞1年。”</p><p>我一听顿时脑瓜子嗡嗡的，接着是满腔的愤怒。我大声说道：</p><p>“什么？什么！这样就要禁飞1年？我能有几个一年？”</p><p>梦中的我对飞行充满热爱，禁飞1年对我来说是巨大的打击。老师没有回应我的愤怒，毕竟我们处在不同的阶级，他们不会感同身受。我尝试换种方式问：</p><p>“老师，您看有没有别的办法可以减轻惩罚的力度？1年时间对我来说实在太长了。”</p><p>老师停顿了一下，竖起三根手指。我高兴地问：</p><p>“老师，是可以减到3天吗？太谢谢您了……”</p><p>“不，你误会我的意思了。”老师打断了我的话，“是交300金币，然后可以免除惩罚。”</p><p>我一听，整个人僵住了。我非常生气，但又无能为力。气愤的是老师本可以通融此事，但却要收取300金币。更气自己当初有侥幸心理，以为不过是被训一顿或者轻微惩罚，却没想到面临的竟是1年禁飞或300金币的两难选择。梦中的300金币（是魔法世界的金币不是RMB）对我而言似乎是巨款，我感到愤怒又无能为力。</p><p>此时的我想要逃走，但老师的屋里已经设置了禁制，我的飞行器具也被收缴。我瞪着面前的几人，说不出话，内心无限憋屈。走出门后，我再次尝试飞行，却完全没有反应，现在的我就和普通路人无异。这一切对我来说无疑是巨大的打击，我沮丧地走在小巷中，思考着这一年该如何度过，因为这完全打乱了我的计划。我恨他们，但更恨我自己。似乎梦到这里就结束了，刚醒来时现实的自己也感到莫名的悲伤。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 梦 </tag>
            
            <tag> 飞行 </tag>
            
            <tag> 惩罚 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔记录一些情感/情绪的流动</title>
      <link href="/2024/08/31/emo/"/>
      <url>/2024/08/31/emo/</url>
      
        <content type="html"><![CDATA[<ul><li><p>20250128</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">现在是23:32，在听storie brevi，不知道为什么，突然有种魔力似的，进入一种沉浸的状态。我闭上双眼，双手合十，感受这种穿透力，仿佛灵魂浮空，感觉很安静。</span><br><span class="line"></span><br><span class="line">这首歌是偶尔看到一个书友的公众号文章上附上的，感觉别人很优秀，很上进，自己突然又有种碰撞感，感觉自己的世界观有点摇摇欲坠。总的来说，自己还是没有巩固自己的内在建设，还是非常容易感到自卑与焦虑。</span><br><span class="line"></span><br><span class="line">我需要像剑来的修仙修心人那样，找到属于自己的证道契机。</span><br><span class="line"></span><br><span class="line">那些证道的过程，就是自己成就时的自我认可过程，不然会反复陷入自我怀疑中，难以自拔。这是心魔，修仙中证道失败，则会道心破碎泯为众人。而自己本是众人，需要证道来巩固自己前进的内在城河。</span><br><span class="line"></span><br><span class="line">我再次双手合十，闭上双眼，向自己的内在求一份安静的心绪。闭上双眼那一刻，仿佛自己坠身于无尽的黑暗，漂泊，是无尽的漂泊。有一束光，我指引自己朝着那亮处游去，缓慢地，缓慢地，深深吸气，然后慢慢呼气，再次睁眼，取得一片静谧。</span><br></pre></td></tr></table></figure></li><li><p>20241231</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">手是手，嘴是嘴，别因为手发不了声音“说不了话”就认为不是好手，同时也别因为嘴巴只会说话而“不会干活”就认为不是好嘴。术业有专攻，别欺人，别自欺欺人，以上。</span><br><span class="line"></span><br><span class="line">在他人屋檐下，应适当低头，但不应低三下四，卑微到尘埃，都只是占用不同比例资源的高级一点的灵长动物罢了。</span><br></pre></td></tr></table></figure></li><li><p>20241229</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">02:12，哦，又是一个深夜，感性的人格又出来活动筋骨了。</span><br><span class="line"></span><br><span class="line">小狸花猫一如既往地蹲坐在左上方的角落，静静地陪着我，即使撵开了，没过多久又会跳上来，无怨无悔，多么纯粹的小猫咪啊。</span><br><span class="line"></span><br><span class="line">我是一个NPC，我时常在想着一些事情，但也仅是想想着而已。时间匆匆，作为NPC的我时感焦灼，却有无力改变现状。我确实仍在走着，但不确定我的未来能走向何方。我害怕自己原地踏步，闭着眼睛蒙蔽自己，自我感动地说我确实努力了，但，成果呢？前方的雾气太浓了，我看不清，迎接我的又是怎样的重重枷锁。我应该还是会继续往前走的，像我这般没天赋的人，只能用最笨的方法去继续死磕了。或许待到白发苍苍之年，我还是一无所有，但又怎样呢？反正按时候也快归零了，还有啥好遗憾的。</span><br><span class="line"></span><br><span class="line">2024年也快结束了，这一年自己主要在人工智能跟鸿蒙这两条道上留下了些许脚印，也算是有所成长吧。从浑然不知的状态，到接触，到探索，到持续的学习与转化，对我自己而言，算是往前迈出了一小步。</span><br><span class="line"></span><br><span class="line">2025年就要来了，下一年，我不求多，只求自己将2024年已经做了但又未闭环的事情画上一个`；`先，不然这些未完之事会持续占用心智宽带，不利于自身的任务调度。另外，在2025年，期望自己持续跟进机器人框架ROS2、谷歌XR、自动数字人播客、3D+AI相关的内容，只有多碰撞多尝试才能构建新认知。</span><br><span class="line"></span><br><span class="line">于此同时，自己也明白，关注太多东西，会分散注意力，非常容易变得碌碌无为。自己也经常被“贪多嚼不烂、杂而不精、廉价的万金油……”这类字眼异常敏感，因为自己时常会感到挫败，觉得自己好像没有什么拿得出手的，大部分的成品都像个小玩具，上不了台面。但自己兴趣使然，天生就比较喜欢各种稀奇古怪的玩意，虽然不精通，但不妨碍我喜欢啊。所以自己也经常说，这辈子或许就是这个层次了，命中注定的事，难以抗衡。我又不是主角，只是一个普通的NPC，哪里有任务需要我，系统就会往我的大脑注入相关的任务信息，让我自己捣鼓学习。</span><br><span class="line"></span><br><span class="line">那就这样吧，继续前行，有怪打怪，有任务就做任务，主打佛性探索。</span><br></pre></td></tr></table></figure></li><li><p>20241104</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">他来自莽荒，迈进黑夜的迷雾，寻觅那内心深处的呼唤。</span><br><span class="line"></span><br><span class="line">走吧，走吧，尽情向前走吧。</span><br><span class="line"></span><br><span class="line">最后都只不过是归于虚无，在这之前，尽管走吧。</span><br></pre></td></tr></table></figure></li><li><p>202409042155</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我本想挥手赶走突然出现的小蟑螂，却没料到一掌下去将它拍成了泥。看着中指上的那一小撮残骸，谁能想到一秒前它还是那只充满警觉的小生物。</span><br><span class="line"></span><br><span class="line">如果有一天，我不幸遇到一个巨巨巨巨人，被他无意间拍死，他是否会想到，我也曾有过属于人族的思维与生活轨迹？</span><br><span class="line"></span><br><span class="line">我不是蟑螂，不知道它的亲朋好友是否会缅怀它。巨人也不是我，他不知道也不想知道那些死在其手上虫子曾有过怎样的过往。他或许只会皱皱眉，说一声“西特”或“法克”，然后匆匆洗手了事。</span><br></pre></td></tr></table></figure></li><li><p>202408312125</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在听《走出心无力》，因为自己现在状态有些低落，一种虚无且低落的感觉。周期性的情绪低落，前行路上的内耗拉扯。</span><br><span class="line"></span><br><span class="line">容易自我攻击，自我反刍，好像有内在有多方势力在争夺身体的控制权。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 情绪 </tag>
            
            <tag> 心理 </tag>
            
            <tag> 内修 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 自我修复 </tag>
            
            <tag> 个人成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入门级丹童：从修仙炼丹谈人工智能大模型训练</title>
      <link href="/2024/08/27/ai-alchemy/"/>
      <url>/2024/08/27/ai-alchemy/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在修仙的世界里，炼丹被视为修行者提升境界、追求长生的终极考验。</p><p>而在当今的人工智能领域，训练大模型也犹如现代科技的“炼丹”过程，丹炉、火候、材料、时间和炼丹师的水平，都决定了最终模型的品质&amp;成败。</p><h2 id="1-丹炉：计算设备的质量"><a href="#1-丹炉：计算设备的质量" class="headerlink" title="1. 丹炉：计算设备的质量"></a>1. 丹炉：计算设备的质量</h2><p>炼丹品质高度的关乎于丹炉，丹炉的质量直接决定了丹药的品质高度。</p><p>在大模型训练中，丹炉对应的是计算设备，尤其是GPU。优质的GPU，是炼丹的“极品青铜炉”，能快速而稳定地进行复杂运算。</p><p>如果使用初级的丹炉炼丹，整个过程将变得漫长且风险重重，最终可能难以炼成高品质的丹药。</p><h2 id="2-材料：数据的质量与数量"><a href="#2-材料：数据的质量与数量" class="headerlink" title="2. 材料：数据的质量与数量"></a>2. 材料：数据的质量与数量</h2><p>炼丹需要珍贵的灵草妙药，大模型训练则依赖于大量高质量的数据。数据就像炼丹的材料，决定了模型的基础。</p><p>数量庞大的高质量数据，犹如千年灵芝、万年雪莲，能够提升模型的准确性和表现力。</p><p>而低质量或杂乱无章的数据则如同劣质材料，不仅会浪费时间，还可能导致模型效果不佳，炼不出有用的“灵丹”。</p><h2 id="3-火候：超参数与训练策略的精确控制"><a href="#3-火候：超参数与训练策略的精确控制" class="headerlink" title="3. 火候：超参数与训练策略的精确控制"></a>3. 火候：超参数与训练策略的精确控制</h2><p>炼丹讲究火候，火候过猛或过弱都会影响丹药的成色。</p><p>在大模型训练中，火候对应于超参数的调节、学习率的设置以及训练策略的选择。这些参数就如同炼丹的火候，稍有不慎，可能导致训练失败或模型性能不理想。</p><p>经验丰富的技术人员（炼丹师）能够通过微调这些参数，使模型在最适合的“火候”下逐步成形，最终炼出高品质的“灵丹”。</p><h2 id="4-时间：训练周期与效率"><a href="#4-时间：训练周期与效率" class="headerlink" title="4. 时间：训练周期与效率"></a>4. 时间：训练周期与效率</h2><p>炼丹需要时间，有些丹药需要数日甚至数月才能炼成。</p><p>同样，大模型训练根据品质的差异，往往也需要连续数小时、数周甚至数月的时间来完成。</p><p>时间的长短取决于丹炉的质量、火候的控制、材料的数量和品质。优质的丹炉、合理的火候和高质量的材料能显著缩短炼丹时间，提升效率。</p><p>而初学者或使用铁锅+劣质材料炼丹，则需要耗费更长时间，最终可能事倍功半。</p><h2 id="5-炼丹师级别：经验对炼丹的影响"><a href="#5-炼丹师级别：经验对炼丹的影响" class="headerlink" title="5. 炼丹师级别：经验对炼丹的影响"></a>5. 炼丹师级别：经验对炼丹的影响</h2><p>炼丹师的级别直接影响炼丹的成功率和丹药的品质。</p><p>初级炼丹师对丹炉、材料和火候的掌握有限，往往依赖前人经验，缺乏灵活应对突发情况的能力，导致炼制出来的丹药品质不高。</p><p>中级炼丹师具备一定的经验，能够合理选择丹炉和材料，精确控制火候，并在炼丹过程中优化步骤，提高效率。</p><p>高级炼丹师不仅精通各种顶级丹炉和稀有材料，还能在最复杂的情况下灵活应对，确保炼制出高品质的灵丹。</p><h2 id="6-废丹与爆炉：失败的风险与防范"><a href="#6-废丹与爆炉：失败的风险与防范" class="headerlink" title="6. 废丹与爆炉：失败的风险与防范"></a>6. 废丹与爆炉：失败的风险与防范</h2><p>在炼丹过程中，最令人头疼的莫过于废丹和爆炉。</p><p>废丹是指丹药没有成功凝聚出灵性，最终成为无用之物。</p><p>在大模型训练中，这对应于训练出来的模型表现不佳（例如破坏原底座模型的泛化性、重复回复、无法理解新语义、微调的内容学习率不高等），无法满足预期需求，往往是由于材料质量不佳或火候控制不当引起的。</p><p>爆炉则是炼丹中的灾难，火候失控或材料反应剧烈，导致丹炉炸裂，炼丹过程彻底失败。</p><p>在大模型训练中，爆炉可能表现为烧卡、系统崩溃或重大错误，通常由于炼丹环境不佳、参数设置不当或资源超载所致。为了避免这些问题，炼丹师（技术人员）需要密切监控训练过程，及时调整各项参数，以确保炼丹顺利进行。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>人工智能大模型的训练与修仙炼丹有着惊人的相似之处。优质的丹炉（计算设备）、高质量的材料（数据）、精确的火候（超参数）、充足的时间，以及炼丹师的经验和水平，共同决定了最终仙丹的成败及品质。</p>]]></content>
      
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 炼丹 </tag>
            
            <tag> 修仙 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人情世故———另一门编程语言入门文档</title>
      <link href="/2024/08/27/lang-of-rqsg/"/>
      <url>/2024/08/27/lang-of-rqsg/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>人情世故语言是一门基于社会互动和人际关系的编程语言。它旨在通过一系列规则和指令帮助用户在社会交往中取得成功。不同于传统编程语言，它更侧重于情感、关系和文化背景的处理。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li><strong>情感变量</strong>：表示个人或群体的情感状态，如<code>开心</code>、<code>愤怒</code>、<code>尴尬</code>等。</li><li><strong>关系变量</strong>：定义人与人之间的关系类型，如<code>朋友</code>、<code>同事</code>、<code>上级</code>、<code>亲属</code>等。</li><li><strong>社会角色</strong>：表示个体在某一特定环境中的角色，如<code>领导者</code>、<code>追随者</code>、<code>调解者</code>等。</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li><strong>言语类型</strong>：如<code>赞美</code>、<code>批评</code>、<code>建议</code>、<code>请求</code>等。</li><li><strong>行为类型</strong>：如<code>帮助</code>、<code>拒绝</code>、<code>倾听</code>、<code>妥协</code>等。</li><li><strong>情境类型</strong>：如<code>聚会</code>、<code>会议</code>、<code>家庭聚餐</code>、<code>突发事件</code>等。</li></ul><h3 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h3><ul><li><p><strong>if-else</strong>：用来处理不同情境下的反应。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  if 对方情感 == &#x27;愤怒&#x27;:</span><br><span class="line">      使用 &#x27;安抚&#x27; 模式</span><br><span class="line">  else if 对方情感 == &#x27;失落&#x27;:</span><br><span class="line">      使用 &#x27;鼓励&#x27; 模式</span><br><span class="line">  else:</span><br><span class="line">      使用 &#x27;正常交流&#x27; 模式</span><br><span class="line">  ```   </span><br><span class="line"></span><br><span class="line">- **for-each**：循环处理多人互动的场景。</span><br><span class="line"></span><br><span class="line">    ```pseudo</span><br><span class="line">    for 参与者 in 聚会:</span><br><span class="line">        # 判断情感状态并选择适当回应</span><br></pre></td></tr></table></figure></li><li><p><strong>switch-case</strong>：用于根据关系变量处理不同类型的关系。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">switch (关系):</span><br><span class="line">    case &#x27;朋友&#x27;:</span><br><span class="line">        使用 &#x27;亲近&#x27; 模式</span><br><span class="line">    case &#x27;上级&#x27;:</span><br><span class="line">        使用 &#x27;尊重&#x27; 模式</span><br><span class="line">    default:</span><br><span class="line">        使用 &#x27;礼貌&#x27; 模式</span><br></pre></td></tr></table></figure></li></ul><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ul><li><p>**请求帮助 (request_help)**：用于向他人请求帮助。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function request_help(目标, 请求内容):</span><br><span class="line">    if 目标关系 == &#x27;朋友&#x27;:</span><br><span class="line">        使用 &#x27;直白&#x27; 语气</span><br><span class="line">    else if 目标关系 == &#x27;同事&#x27;:</span><br><span class="line">        使用 &#x27;礼貌&#x27; 语气</span><br><span class="line">    return 请求成功与否</span><br></pre></td></tr></table></figure></li><li><p>**表达感谢 (express_gratitude)**：用于表达感谢。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function express_gratitude(目标, 事件):</span><br><span class="line">    使用 &#x27;感谢语&#x27;</span><br><span class="line">    if 目标关系 == &#x27;亲密&#x27;:</span><br><span class="line">        添加 &#x27;个人情感表达&#x27;</span><br><span class="line">    else:</span><br><span class="line">        使用 &#x27;标准表达&#x27;</span><br></pre></td></tr></table></figure></li><li><p>**解决冲突 (resolve_conflict)**：处理冲突的函数。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function resolve_conflict(目标A, 目标B, 冲突类型):</span><br><span class="line">    if 冲突类型 == &#x27;误解&#x27;:</span><br><span class="line">        进行 &#x27;解释&#x27;</span><br><span class="line">    else if 冲突类型 == &#x27;利益冲突&#x27;:</span><br><span class="line">        进行 &#x27;调解&#x27;</span><br><span class="line">    return 冲突解决状态</span><br></pre></td></tr></table></figure></li></ul><h2 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h2><h3 id="情境处理"><a href="#情境处理" class="headerlink" title="情境处理"></a>情境处理</h3><ul><li><p><strong>文化差异</strong>：考虑文化背景对行为和语言的影响。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if 目标文化 == &#x27;东方&#x27;:</span><br><span class="line">    使用 &#x27;含蓄&#x27; 语气</span><br><span class="line">else if 目标文化 == &#x27;西方&#x27;:</span><br><span class="line">    使用 &#x27;直率&#x27; 语气</span><br></pre></td></tr></table></figure></li><li><p>**面子管理 (face_management)**：确保自己或他人在交往中不失面子。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function face_management(目标, 情境):</span><br><span class="line">    if 目标情感 == &#x27;尴尬&#x27;:</span><br><span class="line">        使用 &#x27;缓解尴尬&#x27; 语言</span><br><span class="line">    return 目标满意度</span><br></pre></td></tr></table></figure></li></ul><h3 id="优化交往策略"><a href="#优化交往策略" class="headerlink" title="优化交往策略"></a>优化交往策略</h3><ul><li><p>**建立关系网 (network_building)**：创建并维护人际关系网。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function network_building(目标, 初次见面):</span><br><span class="line">    if 初次见面:</span><br><span class="line">        使用 &#x27;寒暄&#x27;</span><br><span class="line">    else:</span><br><span class="line">        进行 &#x27;加深联系&#x27; 活动</span><br></pre></td></tr></table></figure></li><li><p>**提升情商 (EQ_boost)**：通过反思和学习提高情商。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function EQ_boost():</span><br><span class="line">    进行 &#x27;自我反思&#x27;</span><br><span class="line">    学习 &#x27;优秀案例&#x27;</span><br><span class="line">    return 情商提升程度</span><br></pre></td></tr></table></figure></li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul><li><p><strong>场景1</strong>：请求加班帮忙</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function request_overtime_help(同事):</span><br><span class="line">    使用 &#x27;请求帮助&#x27; 函数 with 礼貌语气</span><br><span class="line">    if 同事情感 == &#x27;压力大&#x27;:</span><br><span class="line">        使用 &#x27;激励&#x27; 语气</span><br><span class="line">    else:</span><br><span class="line">        直接 &#x27;提出请求&#x27;</span><br><span class="line">    return 请求成功与否</span><br></pre></td></tr></table></figure></li><li><p><strong>场景2</strong>：调解团队内部冲突</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function mediate_team_conflict(成员A, 成员B):</span><br><span class="line">    判断 &#x27;冲突原因&#x27;</span><br><span class="line">    if 原因 == &#x27;误解&#x27;:</span><br><span class="line">        使用 &#x27;解释&#x27;</span><br><span class="line">    else if 原因 == &#x27;分工不均&#x27;:</span><br><span class="line">        使用 &#x27;重新分配任务&#x27;</span><br><span class="line">    return 冲突解决状态</span><br></pre></td></tr></table></figure></li></ul><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><ul><li><strong>情感失误</strong>：当误解他人的情感时，立即调整策略，使用道歉或解释的方式修正。</li><li><strong>关系失误</strong>：当处理某人关系不当时，迅速恢复并重建信任。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> 人情世故 </tag>
            
            <tag> helloworld </tag>
            
            <tag> 文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键部署 Docker 代理：DockerProxyOneKey 开源项目介绍</title>
      <link href="/2024/08/16/docker-proxy-one-key/"/>
      <url>/2024/08/16/docker-proxy-one-key/</url>
      
        <content type="html"><![CDATA[<p align="center" style="background-color: #33f0f0f0;">    <img src="https://github.com/user-attachments/assets/d32957f6-94fd-4ae2-83f3-12622b7d9429" alt="DockerProxyOneKey" width="200"/></p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在当今的云计算和容器化技术环境中，简化和加速部署过程成为了开发者们的共同目标。DockerProxyOneKey 项目就是为此目的设计的，它提供了一个便捷的解决方案，通过一键部署来轻松设置 Docker 代理，节省时间与精力。</p><h2 id="什么是-DockerProxyOneKey？"><a href="#什么是-DockerProxyOneKey？" class="headerlink" title="什么是 DockerProxyOneKey？"></a>什么是 DockerProxyOneKey？</h2><p>DockerProxyOneKey 是一个开源项目，旨在通过一键脚本帮助用户快速部署和配置 Docker 代理。该项目通过整合多种工具和服务，提供了一个高效且灵活的解决方案，适合那些希望简化部署过程的开发者。</p><h2 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h2><p>DockerProxyOneKey 提供了一系列核心功能，使其成为一个强大的工具：</p><ul><li><strong>一键安装与部署</strong>：通过简单的脚本，用户可以轻松完成 Docker 代理的安装与配置，避免了繁琐的手动操作。</li><li><strong>灵活的配置</strong>：支持多种配置选项，用户可以根据自己的需求进行定制，包括代理的端口、证书等。</li><li><strong>支持多平台</strong>：该工具不仅可以在 Linux 环境下使用，还支持多种服务器架构，包括 x86 和 ARM。</li></ul><h2 id="项目安装与使用"><a href="#项目安装与使用" class="headerlink" title="项目安装与使用"></a>项目安装与使用</h2><p>DockerProxyOneKey 的安装过程非常简单，只需几个步骤即可完成：</p><ul><li><ol><li><strong>克隆项目</strong>：首先，用户需要克隆项目的 GitHub 仓库。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Samge0/DockerProxyOneKey.git</span><br><span class="line"></span><br><span class="line">cd DockerProxyOneKey</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="2"><li><strong>执行一键脚本</strong>：进入项目目录后，运行以下命令以启动一键部署：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chmod +x run.sh</span><br><span class="line"></span><br><span class="line">./run.sh \</span><br><span class="line">--domain your_domain.com \</span><br><span class="line">--reverse_proxy_server http://127.0.0.1 \</span><br><span class="line">--cf_token your_cloudflare_token</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="典型应用场景"><a href="#典型应用场景" class="headerlink" title="典型应用场景"></a>典型应用场景</h2><p>DockerProxyOneKey 适用于以下几种典型场景：</p><ul><li><strong>多容器部署环境</strong>：对于需要在多容器环境中进行代理配置的用户，该工具能够大大简化操作流程。</li><li><strong>云服务器管理</strong>：在管理多个云服务器时，通过 DockerProxyOneKey，您可以轻松在不同的服务器上统一配置 Docker 代理。</li><li><strong>跨平台支持</strong>：如果您的开发环境涉及多个平台，如 x86 和 ARM，这款工具的跨平台支持将为您带来便利。</li></ul><h2 id="开源与社区支持"><a href="#开源与社区支持" class="headerlink" title="开源与社区支持"></a>开源与社区支持</h2><p>DockerProxyOneKey 是一个开源项目，用户可以通过 GitHub 仓库获取最新版本。</p><ul><li>GitHub 仓库地址：<a href="https://github.com/Samge0/DockerProxyOneKey">https://github.com/Samge0/DockerProxyOneKey</a></li></ul><h2 id="可选操作"><a href="#可选操作" class="headerlink" title="可选操作"></a>可选操作</h2><p>[可选] 指定镜像仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./run.sh \</span><br><span class="line">--services hub,ui,caddy \</span><br><span class="line">--domain your_domain.com \</span><br><span class="line">--reverse_proxy_server http://127.0.0.1 \</span><br><span class="line">--cf_token your_cloudflare_token</span><br></pre></td></tr></table></figure><p>[可选] 自定义configs配置目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./run.sh \</span><br><span class="line">--services hub,ui,caddy \</span><br><span class="line">--domain your_domain.com \</span><br><span class="line">--reverse_proxy_server http://127.0.0.1 \</span><br><span class="line">--cf_token your_cloudflare_token \</span><br><span class="line">--custom_cofigs_dir /path/to/your/configs</span><br></pre></td></tr></table></figure><p>[可选] 自定义yml配置文件中的参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">./run.sh \</span><br><span class="line">--services hub,ui,caddy \</span><br><span class="line">--domain your_domain.com \</span><br><span class="line">--reverse_proxy_server http://127.0.0.1 \</span><br><span class="line">--cf_token your_cloudflare_token \</span><br><span class="line">--update_yml true \</span><br><span class="line">--proxy_ttl 168h \</span><br><span class="line">--health_enabled true \</span><br><span class="line">--health_interval 10s \</span><br><span class="line">--health_threshold 3 \</span><br><span class="line">--http_max_age 1728000 \</span><br><span class="line">--storage_upload_enabled true \</span><br><span class="line">--storage_upload_age 168h \</span><br><span class="line">--storage_upload_interval 24h \</span><br><span class="line">--storage_readonly false</span><br></pre></td></tr></table></figure><p>[可选] 参考脚本参数说明</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./run.sh -h</span><br></pre></td></tr></table></figure><h2 id="Cloudflare说明"><a href="#Cloudflare说明" class="headerlink" title="Cloudflare说明"></a>Cloudflare说明</h2><ul><li>购买一个便宜的域名</li><li>在<a href="https://dash.cloudflare.com/">Cloudflare</a>中添加域名，配置DNS记录，添加A记录+子域名泛解析，指向<code>IPv4</code>地址，开启CDN<code>Proxy</code>（小黄云）</li><li>在Cloudflare中<a href="https://dash.cloudflare.com/profile/api-tokens">创建API Token</a>，并选择<code>Zone: Zone: DNS: Edit DNS</code>权限</li><li>在目标域名的<code>SSL/TLS</code>选项卡中开启HTTPS的<code>完全（严格）/ Full（Strict）</code>模式<br><img src="https://github.com/user-attachments/assets/c2ac3b10-8f00-487b-ac65-34e4b15b40ba" alt="image"><br><img src="https://github.com/user-attachments/assets/cb27e29d-9945-4829-bc8d-7d285fc98938" alt="image"></li></ul><h2 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h2><p><img src="https://github.com/user-attachments/assets/a5520800-1f94-4dd1-acd2-6e4d15708e89" alt="image"><br><img src="https://github.com/user-attachments/assets/679cd11e-8331-4b5f-ba4d-e24cda4d684f" alt="image"><br><img src="https://github.com/user-attachments/assets/face75c5-74e1-4aa1-b040-d40cf21f8fae" alt="image"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于需要在复杂的多容器环境中部署代理的开发者而言，DockerProxyOneKey 提供了一个简化流程、提高效率的解决方案。</p><p>通过一键部署和灵活配置，它能够帮助您快速上手，节省宝贵的开发时间。希望这篇文章能够帮助您更好地了解并使用 DockerProxyOneKey 项目。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 脚本 </tag>
            
            <tag> docker </tag>
            
            <tag> 代理 </tag>
            
            <tag> DockerProxyOneKey </tag>
            
            <tag> 开源 </tag>
            
            <tag> Cloudflare </tag>
            
            <tag> Caddy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于人与人之间的编程艺术思考</title>
      <link href="/2024/08/12/lang-of-human/"/>
      <url>/2024/08/12/lang-of-human/</url>
      
        <content type="html"><![CDATA[<p>现在是20:32，在听口才跟人情世故方面的书籍。</p><p>之所以看这些，是感觉自己是时候开始学习人与人之间的“编程之术”了。</p><p>要想在这人与人的节点之间构建“程序”，就需要了解不同人的常见变量、常见语法、常见运行方式、常见的<span style="color: blue;">info</span>、<span style="color: orange;">warn</span>跟<span style="color: red;">error</span>。</p><p>如果不去接触，不去了解，那只会永远活在自己的臆想之中，然后在现实生活中持续碰壁。</p><p>将人与人之间的关系视为一项编程语言，对于程序员来说是比较友好的。</p><p>既然要学习这门“编程语言”，那就要放下过往所学语言的语法，不要自以为，要多承认一些规则就是这门“语言”的默认框架定义。就好像int就是int，string就是string，不同的语言各有千秋，但也有相似之处。</p><p>既然知道一些沟通的技巧就像是程序的固定模板，那就不要那么拧巴，该说说，不该说的不说。</p><p>当你在某一语言有登峰造极之势时，你也可以创建“新语言”。</p><p>哦，一切皆语言，一切皆艺术。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> 人情世故 </tag>
            
            <tag> 思考 </tag>
            
            <tag> 人与机器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提高追番效率：使用暴力猴脚本实现一键自动切换集数并跳过片头片尾</title>
      <link href="/2024/07/07/tools-script-video-next-play/"/>
      <url>/2024/07/07/tools-script-video-next-play/</url>
      
        <content type="html"><![CDATA[<p>在某个动漫网站追番时，每次都要手动切换集数和调整进度以跳过片头片尾，这实在是太麻烦了。为了简化这个过程，我临时起意，让GPT帮忙编写了一个暴力猴（Tampermonkey）脚本，实现<code>&quot;一键自动切换下一集并跳过片头&quot;</code>的功能。</p><p>这个脚本让观看动漫的体验变得更加顺畅。现在，只需点一下按钮，就可以切换到下一集并自动跳过片头，极大地节省了重复操作的时间。</p><p>当然，也可以通过简单的设置实现全自动播放的功能，比如自动监听播放到片尾位置并切换到下一集。目前我观看的动漫片尾时间不固定，暂时没有配置全自动切换播放的功能。当前这个一键切换下一集的手动功能，已经解放了大量的重复时间，让观影体验更为愉悦。</p><p>以下是这个脚本的基本逻辑：</p><ul><li><strong>一键切换下一集</strong>：无需手动选择下一集，只需点击一次按钮即可自动切换。</li><li><strong>自动跳过片头</strong>：在播放时自动跳过片头部分，直接进入正片。</li></ul><p>以下是本次脚本的代码记录：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         切换下一集按钮</span></span><br><span class="line"><span class="comment">// @namespace    Violentmonkey Scripts</span></span><br><span class="line"><span class="comment">// @match        https://www.mxdmp.com/play/*/1/*</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> button = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    button.<span class="property">innerHTML</span> = <span class="string">&#x27;切换下一集&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&#x27;20px&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&#x27;20px&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&#x27;10000&#x27;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(button);</span><br><span class="line"></span><br><span class="line">    button.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> currentUrl = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">        <span class="keyword">let</span> match = currentUrl.<span class="title function_">match</span>(<span class="regexp">/https:\/\/www\.mxdmp\.com\/play\/(\d+)\/1\/(\d+)\//</span>);</span><br><span class="line">        <span class="keyword">if</span> (!match) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> dramaId = match[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">let</span> currentEpisode = <span class="built_in">parseInt</span>(match[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> nextEpisode = currentEpisode + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> jumpTime = <span class="number">3</span> * <span class="number">60</span> + <span class="number">30</span>; <span class="comment">// 第三分半钟的秒数</span></span><br><span class="line">        <span class="keyword">let</span> nextUrl = <span class="string">`https://www.mxdmp.com/play/<span class="subst">$&#123;dramaId&#125;</span>/1/<span class="subst">$&#123;nextEpisode&#125;</span>/?jumpTime=<span class="subst">$&#123;jumpTime&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳转到下一集</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = nextUrl;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当页面加载完毕时设置播放进度</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>);</span><br><span class="line">        <span class="keyword">let</span> jumpTime = params.<span class="title function_">get</span>(<span class="string">&#x27;jumpTime&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (jumpTime) &#123;</span><br><span class="line">            <span class="keyword">let</span> player = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.art-video&#x27;</span>); <span class="comment">// s根据实际情况获取视频元素</span></span><br><span class="line">            <span class="keyword">if</span> (player) &#123;</span><br><span class="line">                player.<span class="property">currentTime</span> = <span class="built_in">parseInt</span>(jumpTime);</span><br><span class="line">                player.<span class="title function_">play</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果想要播放到指定进度时自动播放下一集，可参考下面脚本（例如这里播放到<code>18:30</code>时自动播放下一集，完全自动化，解放双手）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         切换下一集按钮</span></span><br><span class="line"><span class="comment">// @namespace    Violentmonkey Scripts</span></span><br><span class="line"><span class="comment">// @match        https://www.mxdmp.com/play/*/1/*</span></span><br><span class="line"><span class="comment">// @grant        none</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> button = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">    button.<span class="property">innerHTML</span> = <span class="string">&#x27;切换下一集&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&#x27;20px&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&#x27;20px&#x27;</span>;</span><br><span class="line">    button.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&#x27;10000&#x27;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(button);</span><br><span class="line"></span><br><span class="line">    button.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">switchToNextEpisode</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">switchToNextEpisode</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> currentUrl = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">        <span class="keyword">let</span> match = currentUrl.<span class="title function_">match</span>(<span class="regexp">/https:\/\/www\.mxdmp\.com\/play\/(\d+)\/1\/(\d+)\//</span>);</span><br><span class="line">        <span class="keyword">if</span> (!match) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> dramaId = match[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">let</span> currentEpisode = <span class="built_in">parseInt</span>(match[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> nextEpisode = currentEpisode + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> jumpTime = <span class="number">3</span> * <span class="number">60</span> + <span class="number">30</span>; <span class="comment">// 第三分半钟的秒数</span></span><br><span class="line">        <span class="keyword">let</span> nextUrl = <span class="string">`https://www.mxdmp.com/play/<span class="subst">$&#123;dramaId&#125;</span>/1/<span class="subst">$&#123;nextEpisode&#125;</span>/?jumpTime=<span class="subst">$&#123;jumpTime&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳转到下一集</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = nextUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动切换到下一集的逻辑</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">autoSwitchNextEpisode</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.art-video&#x27;</span>); <span class="comment">// 根据实际情况获取视频元素</span></span><br><span class="line">        <span class="keyword">if</span> (!player) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        player.<span class="title function_">addEventListener</span>(<span class="string">&#x27;timeupdate&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// 如果视频当前时间超过18:40秒，执行切换到下一集的操作</span></span><br><span class="line">            <span class="keyword">if</span> (player.<span class="property">currentTime</span> &gt;= <span class="number">18</span> * <span class="number">60</span> + <span class="number">40</span>) &#123;</span><br><span class="line">                <span class="title function_">switchToNextEpisode</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当页面加载完毕时设置播放进度</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>);</span><br><span class="line">        <span class="keyword">let</span> jumpTime = params.<span class="title function_">get</span>(<span class="string">&#x27;jumpTime&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (jumpTime) &#123;</span><br><span class="line">            <span class="keyword">let</span> player = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.art-video&#x27;</span>); <span class="comment">// 根据实际情况获取视频元素</span></span><br><span class="line">            <span class="keyword">if</span> (player) &#123;</span><br><span class="line">                player.<span class="property">currentTime</span> = <span class="built_in">parseInt</span>(jumpTime);</span><br><span class="line">                player.<span class="title function_">play</span>();</span><br><span class="line">                <span class="title function_">autoSwitchNextEpisode</span>(); <span class="comment">// 启动自动切换下一集的监听</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> 追番 </tag>
            
            <tag> 暴力猴 </tag>
            
            <tag> 油猴 </tag>
            
            <tag> 自动播放 </tag>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命的脆弱与意义：在世俗压力中的自我追寻</title>
      <link href="/2024/07/05/life-1/"/>
      <url>/2024/07/05/life-1/</url>
      
        <content type="html"><![CDATA[<p>在这个快节奏、高压力的社会中，我们常常被生活的重担压得喘不过气来。今天，一段短视频深深触动了我的心弦，它讲述了一位中金公司的女职员，在公司降薪、房贷压力和产后抑郁的多重打击下，最终选择了一条不归路。她曾是海外留学的佼佼者，成绩斐然，性格阳光。然而，生活的种种琐碎和职场的挫败，让她在人生的十字路口迷失了方向，令人唏嘘。</p><p>我曾多次思索，人类是多么的脆弱。似乎不管多美好的事物，最后都有凋零的一天，只是这一天来得迟或来得早罢了。这或许有种种悲观的虚无主义，但却是我们不得不面对的现实。在人生的不同阶段，我们追求的目标也在不断变化。有时候，当我们达到某个高度后，似乎选择变得少了，但其实，是我们开始忽视了那些曾被我们珍视的选择。</p><p>我觉得每个人都应该去探索和追求自己生命的意义，并努力去实现自己想要实现的，而不是追逐世俗的标准。我们要学会接受生命的有限性，认识到”人终有一死”这一不可逆转的事实，这样我们就不会总是活在对未知的恐惧和对未完成愿望的焦虑中。</p><p>我曾多次思考类似“突然暴毙”这类问题，但并没有较好好的总结。也曾想过构建一个<code>XX天多次尝试失败后，自动发自己讣告及遗愿的自动程序</code>，因为感到好多人似乎突然消失后就是真的消失了，仿佛从未来过这个世界一般。曾经的一切都慢慢湮灭，消失在历史的长河。就像泡沫一般，bo，爆了，没了，消失了。除了有限的观察者外，还有谁记得其曾经来过？</p><p>目前我的想法是，人总有一死，总有遗憾。每个人或许只是宇宙这个庞大模型中的一个微小变量。我们的离去，或许对整个模型的演进影响微乎其微，毕竟有的模型训练每次还随机kill掉一些。我们只不过是一种偶然的变量，这一次训练迭代中出现，诞生了一个有我们参与的模型。这不能说明我们这个变量非常重要，我们所做的事，我们未完成的事有多重要，只能说我们对当前这个模型的演变有那么一丢丢的影响罢了。</p><p>如果世界是不同模型的迭代推演，那我们作为变量，在其他模型中是可有可无的，因为我们并不在其他模型的运算权重之中。</p><p>但这并不意味着我们的存在和追求毫无意义。我们对当前这个模型的演变，有着自己独特的影响。如果世界是由无数个模型的迭代和推演构成的，那么我们作为其中的变量，虽然在其他模型中可能无足轻重，但在我们自己的模型中，我们却是不可或缺的。</p><p>想开一些，接受会死亡的事实，接受突然暴毙的事实，拥抱生命的有限，接受生活的不确定性。然后热爱每一天，过好每一天，不再为世俗的那些东西乱了心神。做好自己，追求内心的热爱，而不是世俗的规则&#x2F;荣耀榜单。</p><p>愿我们在自己的小世界里，建立属于自己的荣誉榜单，活出真正的自我。</p><p>愿我们都能勇敢地追寻心中的梦想，不受世俗的羁绊，活出属于自己的精彩人生。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 思考 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 意义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>未来相关的一些畅想</title>
      <link href="/2024/06/19/dream/"/>
      <url>/2024/06/19/dream/</url>
      
        <content type="html"><![CDATA[<ul><li>将迎来类似航海时代那样的大航空时代，一批又一批的勇士不断冲破苍穹，踏上银河的星际探索之旅。</li><li>AI跟机器人的加速融合，非侵入式脑机的进一步成熟，人们可以用脑机远控地外机器人进行作业任务。</li><li>AI对各行业的进一步渗透，诞生更多新奇的东西+创造新的岗位。</li><li>AI生成视频的质量越来越成熟，有望像2023年初SD那样迎来井喷式的应用。期望以后有产品像《西部世界》中那样，用语音讲故事，然后实时修改故事创作者想要的视频场景。每个人都是一个富有创意的导演，言出法随。</li><li>小巧的可悬浮跟随使用者的机器人，可以通过脑机或语音执行任务，例如：录像、拍照、微表情识别、xx范围内的危险预测、各种识别、随身携带的智能联网知识库、路线规划等。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 未来 </tag>
            
            <tag> 科技 </tag>
            
            <tag> 畅想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注册并激活Wise账户</title>
      <link href="/2024/06/19/register-wise/"/>
      <url>/2024/06/19/register-wise/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前注册 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 遇到无法使用国内外币卡入金激活账户的问题，最近刚好开了新加坡华侨银行OCBC卡，便改用 OCBC 入金 30 新币（SGD）激活 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户。</p><h2 id="整体流程（耗时4天）"><a href="#整体流程（耗时4天）" class="headerlink" title="整体流程（耗时4天）"></a>整体流程（耗时4天）</h2><p>实际大部分人都是当天注册就能激活，这里耗时这么久是我自己踩坑了。</p><ul><li>20240615 PC端使用护照注册 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户并使用 OCBC 卡扫二维码入金 30SGD，刚好是周六，提示要到18号才能审核完毕</li><li>20240618 依旧提示审核中，邮件联系客服，咨询进度，得到的回复是需要耐心等待</li><li>20240619 尝试改用绑卡的方式，输入 OCBC 卡号、日期、CVV，再次入金 30SGD，这次居然几分钟就审核完毕并成功激活 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户，之前那笔扫码入金的钱也立即到账了。</li></ul><h2 id="Wise-是什么"><a href="#Wise-是什么" class="headerlink" title="Wise 是什么"></a><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 是什么</h2><p><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 是什么？<a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 是一个跨境汇款工具，主要的功能就是用来汇款的，它的汇款汇率非常低；当然 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 也提供外币账户，如「美元账户」、「欧元账户」、「新加坡元账户」、「英镑账户」等。虽然 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 不提供港币账户和人民币账户，但是可以通过 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 把外币兑换成「人民币」提现到中国大陆的【支付宝、微信、银联卡】；也可以通过 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 把外币兑换成「港币」提现到你的香港银行卡。</p><p><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 虽然提供外币账户，但它不是银行，无法把它当成银行来使用，它的主要功能是汇款，不建议把大资金放在 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 的外币账户。</p><h2 id="Wise-有什么用"><a href="#Wise-有什么用" class="headerlink" title="Wise 有什么用"></a><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 有什么用</h2><p><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 的用处非常多，被很多人称为「汇款神器」。如果你只是把它当成汇款工具，其实是把它想简单了，因为它还有别的用处。</p><p>那到底 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a>有什么用呢？<a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 可以用在以下几个方面：</p><ul><li>资金中转：资金到 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 后，可以换成人民币资金回国，可以换成港币到香港账户，可以换成新加坡币到新加坡华侨银行账户（OCBC）等等</li><li>入金美股券商：可以直接用美元、英镑、新加坡币等入金「盈透证券」、「富途牛牛」、「长桥证券」等美股券商</li><li>佣金收款：可以接受 Stripe 资金或部分返佣平台的佣金（USD、SGD等）</li><li>实体借记卡：非中国地址可以申请 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 实体 VISA 卡</li><li>订阅 ChatGPT Plus、Claude 3、Midourney 等境外 AI 服务：<a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 实体 VISA 卡可以直接用来订阅 ChatGPT 4</li><li>数字货币出金：Kraken 英镑可以出金到 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a>（USDT ➡️ Kraken ➡️ 在 Kraken 将 USDT 兑换成 GBP ➡️ <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> GBP 账户,需要联系 Kraken 客服开通英镑 GBP 的 FPS 系统）</li></ul><p>⚠️ 注意：虽然 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 可以通过更改「居住地址」到国外来申请 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> Visa 实体卡片，但该操作可能会遇到被风控而导致关户（额外要求你提供国外的地址证明），<strong>不建议通过更改地址去申请实体卡</strong>，毕竟境外实体卡有非常多的渠道可以申请到，但像 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 这样好用的账户却很少。没有必要捡了芝麻丢了西瓜，得不偿失。</p><h2 id="Wise-注册及入金激活流程"><a href="#Wise-注册及入金激活流程" class="headerlink" title="Wise 注册及入金激活流程"></a><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 注册及入金激活流程</h2><p>在中国大陆，可以用全套中国资料去开户 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a>，<a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 的注册流程非常简单，大致如下：</p><ul><li>访问 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 官网</li><li>使用电子邮箱和手机号码注册 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户</li><li>使用中国护照认证 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户</li><li>使用新加坡华侨银行 OCBC 或香港银行卡同名入金激活 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户</li></ul><p>⚠️ 如果使用护照认证 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户时，遇到「Required」报错，可以采取以下办法：</p><ul><li>开启「无痕模式」再次护照认证</li><li>清除浏览器所有缓存及历史记录后，再次护照认证</li><li>在 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> APP 自助认证</li><li>在 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> APP 联系 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 客服协助认证</li></ul><p><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> APP 下载：</p><ul><li>苹果手机在苹果商店搜索<code>Wise</code>下载</li><li>安卓手机在谷歌商店搜索<code>Wise</code>下载</li></ul><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><p>Q1.<a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 借记卡有什么用？</p><blockquote><p>订阅 ChatGPT Plus、海淘、绑定支付宝消费等</p></blockquote><p>Q2.<a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 可以入金哪些券商？</p><blockquote><p><a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 美元账户可以入金盈透证券、富途牛牛、嘉信理财、老虎证券等，<a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 新加坡币账户可以入金盈透证券、富途牛牛新加坡版</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>2024 年注册 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户、并同名入金激活 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户的方法总体还是比较简单的。只要你有新加坡华侨银行OCBC账户或香港银行账户，就可以马上入金激活 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a>。</p><p>我之前注册入金遇到要审核多天的情况，可能跟扫二维码入金的方式有关，后面尝试改用绑卡的方式入金 30SGD，几分钟就成功了。所以这里建议首次注册 <a href="https://wise.com/invite/dic/chengbaos1">Wise</a> 账户时，使用绑卡的方式（同一名字下的卡）入金，避免不必要的麻烦。</p><p>如果需要开通新加坡华侨银行 OCBC 卡，可以参考 <a href="https://blog.samgeai.com/2024/06/17/ocbc-card/">线上申请新加坡OCBC实体卡并成功激活的记录</a>。目前 OCBC 卡支持线上直接申请，还可以获得实体卡。</p>]]></content>
      
      
      
        <tags>
            
            <tag> OCBC </tag>
            
            <tag> Wise </tag>
            
            <tag> 激活 </tag>
            
            <tag> 注册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线上申请新加坡OCBC实体卡并成功激活的记录</title>
      <link href="/2024/06/17/ocbc-card/"/>
      <url>/2024/06/17/ocbc-card/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2023年，新加坡华侨银行（简称OCBC）允许中国、香港、马来西亚和印尼的外籍客户在当地开设全数字银行账户。如果您需要新加坡的银行账户和借记卡，可以去申请。</p><p>本文仅供参考，不承担相应风险。如果您无法自行承担相应风险，请立即停止阅读。</p><h2 id="整体流程（耗时12天）"><a href="#整体流程（耗时12天）" class="headerlink" title="整体流程（耗时12天）"></a>整体流程（耗时12天）</h2><ul><li>20240601 在APP端提交申请并审核通过，手机APP端申请360账户（APP端申请默认会寄送实体卡）</li><li>20240603 发安全邮件咨询实体卡运单号</li><li>20240604 制卡完成并发出快递</li><li>20240607 下午收到邮件回复的运单号：RA74*****13SG</li><li>20240612 成功拿到OCBC实体卡，在APP端激活实体卡</li><li>20240613 通过工行同名账户电汇1050新币到OCBC卡，成功激活并获取15新币奖励</li></ul><h2 id="申请华侨银行（OCBC）账户有什么用处？"><a href="#申请华侨银行（OCBC）账户有什么用处？" class="headerlink" title="申请华侨银行（OCBC）账户有什么用处？"></a>申请华侨银行（OCBC）账户有什么用处？</h2><ul><li>可获得2个以上的新加坡银行账户</li><li>可以更加方便的进行跨境收付款</li><li>可购买港股、美股（参考：长桥证券、盈立证券）</li><li>可以申请借记卡，用于网上消费和全球消费</li><li>借记卡支持Apple Pay&#x2F;Google Pay移动支付</li><li>OCBC给WSIE入金秒到账<br>如果您没有上述需求或者不明白这个账户的用途，建议您不要申请。如果您有上述需求或明白此账户用途，请继续阅读。</li></ul><h2 id="关于新加坡华侨银行"><a href="#关于新加坡华侨银行" class="headerlink" title="关于新加坡华侨银行"></a>关于新加坡华侨银行</h2><p>华侨银行是新加坡三大本地银行之一，总部设在新加坡，成立于1932年，是新加坡历史最悠久的银行之一。网站和APP支持中文，且有中文客服。</p><h2 id="申请华侨银行（OCBC）账户"><a href="#申请华侨银行（OCBC）账户" class="headerlink" title="申请华侨银行（OCBC）账户"></a>申请华侨银行（OCBC）账户</h2><p>首先您需要准备以下资料&#x2F;文件：</p><ul><li>安卓或苹果手机，且支持NFC功能</li><li>护照</li><li>身份证</li><li>中国大陆手机号</li><li>准备1020及以上SGD入金验证</li></ul><p>先去苹果或者Google商店搜索“OCBC Digital”进行安装，或者直接访问下面的地址：</p><ul><li>Google Play：<a href="https://play.google.com/store/apps/details?id=com.ocbc.mobile">https://play.google.com/store/apps/details?id=com.ocbc.mobile</a></li><li>App Store：<a href="https://apps.apple.com/app/ocbc-digital-mobile-banking/id292506828">https://apps.apple.com/app/ocbc-digital-mobile-banking/id292506828</a></li></ul><p>打开“OCBC Digital”根据界面要求如实填写信息，邀请码填写：<code>632S37JB</code>，使用邀请码后1个月内入金1000 SGD可额外获得15 SGD赠金（有人测试了不输入邀请码也可以获得15 SGD赠金，但稳妥起见，建议输入邀请码）。</p><p>如果APP打开闪退或者黑屏请尝试完全关闭后重新打开，另外国内网络可能加载较慢。线上开户大致步骤如下：</p><ul><li>要求填写手机号（使用国内手机号就行）</li><li>会要求使用手机NFC功能感应护照（放在护照上不动即可，自动读取）</li><li>要求拍摄护照</li><li>身份证拍照</li><li>要求视频验证</li></ul><p>信息务必真实填写，不然可能影响开户，整个申请过程大概几分钟完成，运气好的用户可能秒开，运气不好可能会触发人工审核，审核周期是7个工作日内。同时开户过程中，下面的信息请牢记：</p><ul><li>会要求您设置一个用户名，这个用户名是用来登录网页版的，<strong>请牢记</strong></li><li>会要求您设置6位数字的PIN（用来登录网页版需要），<strong>请牢记</strong></li><li>会要求手机绑定OneToken（可以理解为一个安全的二次认证工具）</li></ul><p>注意：核过程中请不要退出“OCBC Digital”当前用户状态，不然后面审核通过后可能您无法登录，陷入死循环。(有博主提示卸载app会导致OneToken失效，如果已经提交申请了，建议不要随意卸载该APP，避免不必要的麻烦)</p><p>审核通过后，默认给您开通了2个新加坡银行账户，分别是：</p><ul><li>Statement Savings Account（STS）</li><li>Global Savings Account（GSA）</li></ul><p>这2个账户可用来收款或者对外转账。</p><h2 id="入金激活OCBC"><a href="#入金激活OCBC" class="headerlink" title="入金激活OCBC"></a>入金激活OCBC</h2><p>开户成功后需要同名账户在1个月内入金1000 SGD以上激活OCBC.</p><p>据网友反馈，OCBC加强了验证，已不支持WISE首次入金激活，且未激活账户的情况下所有入金都会被拒收。</p><p>本人使用<code>工商银行</code>入金激活方式：</p><ul><li>购买1020及以上的SGD汇（购买大于1000新币是避免入账时扣的手续费，我本次入金扣了8新比，例如我汇入1050，实际到账1042）</li><li>跨境汇款，填写收款人信息，提交汇款</li></ul><p>填写以下信息：</p><ul><li>名字：您名字的拼音，比如你叫张三丰，那么名字就填写：SANFENG（注意是您华侨银行开户时用的名字）</li><li>姓：比如你叫张三丰，那么姓就是：ZHANG（注意是您华侨银行开户时用的姓）</li><li>SWIFT码：OCBCSGSG</li><li>收款银行：OVERSEA-CHINESE BANKING CORPORATION LIMITED</li><li>银行账号：您在“OCBC Digital”的STS账户上看到的账户号码（注意：是账户号码，不是银行卡号码，号码不需要-符号）</li><li>街道及门牌号：63 Chulia Street 10-00， OCBC Centre East， Singapore 049514</li><li>汇款用途：旅游</li></ul><p>如果您成功给OCBC账户入金1000 SGD以上（需要同名账户），那么等待几个小时会将15 SGD赠金发送到您的账户中（这个赠金不是实时到账的）</p><h2 id="修改您的OCBC邮寄地址（可跳过）"><a href="#修改您的OCBC邮寄地址（可跳过）" class="headerlink" title="修改您的OCBC邮寄地址（可跳过）"></a>修改您的OCBC邮寄地址（可跳过）</h2><p>在申请OCBC账户的时候已经填写了居住地址，APP会自动将中文地址给您翻译成英文，如果地址不准确，可通过下面的方法修改。如果地址正确，或者不需要申请借记卡，可略过此步骤。</p><p>OCBC网页版登录地址：<a href="https://internet.ocbc.com/internet-banking/">https://internet.ocbc.com/internet-banking/</a></p><p>登录网页版会要求您填写：</p><ul><li>Access Code：就是您当初开设账户时设置的名称</li><li>PIN：您开设账户时设置的6位数字PIN码</li></ul><p>这时会弹出“OneToken”的二次认证，然后打开“OCBC Digital”的APP，先不要马上验证指纹进入APP，点击右下方的“更多服务（More）”，找到“OneToken”，获取6位认证码，填写到网页中进行登录。</p><p>把OCBC网页版改成了中文语言，点击导航栏上面的“客户服务 - 更改邮寄地址”</p><p>直接勾选您的所有账户，然后下一页。</p><p>然后填写新的地址信息：</p><ul><li>地址类型：海外</li><li>地址栏1：填写您的手机号，街道地址（用ChatGPT帮你翻译）</li><li>地址栏2：填写您的区，城市（可以用拼音）</li><li>地址栏3：您住址所在的邮编</li><li>国家&#x2F;地区：China</li></ul><p>下一页，保存确认地址即可。这里在地址栏1填写您手机号的目的是OCBC可能不会在物流信息上打印你的手机号，导致快递员可能无法正常联系到您。</p><p>(提交申请后可通过APP的安全邮箱联系客服获取运单追踪号，后续运到国内后一般会显示快递员的联系方式，你也可以主动短信&#x2F;电话联系快递员说明中文的派送地址)</p><h2 id="申请OCBC-360-Account"><a href="#申请OCBC-360-Account" class="headerlink" title="申请OCBC 360 Account"></a>申请OCBC 360 Account</h2><p>在APP端申请OCBC 360 Account可额外开通一个账户，且默认分配一张VISA实体借记卡，这张实体借记卡可用于海外消费（比如支付ChatGPT Plus），ATM取款等。如果您不需要实体借记卡，可略过此步骤。</p><p>回到“OCBC Digital”APP上，点左侧导航栏“申请 - 账户 - 360 Account”，根据步骤提示进行填写。</p><p>注意：</p><ul><li>申请360 Account不建议选择自雇（可能触发人工审核）</li><li>名字建议保持默认（否则可能触发人工审核）</li><li>如果触发人工审核，可能出现有户无卡的情况</li></ul><p>借记卡默认用挂号信方式寄出，可以在“APP上左侧导航 —— 安全邮箱 —— 发送英文邮件”索要物流追踪号码，然后通过EMS单号进行查询。</p><p>查询物流可通过下面的链接查询：</p><ul><li><a href="https://www.17track.net/en">https://www.17track.net/en</a></li><li><a href="https://www.singpost.com/track-items">https://www.singpost.com/track-items</a></li></ul><h2 id="境内消费"><a href="#境内消费" class="headerlink" title="境内消费"></a>境内消费</h2><p>如果有申请360借记卡的用户，可以在国内刷卡或者ATM消费（有手续费，不太建议）</p><p>将“OCBC Digital”更新到最新后可扫商户银联码消费，也可以扫支付宝收款码进行消费</p><p>扫支付宝收款码进行消费，无手续费，但是存在2%汇损，适合临时应急使用，不适合大额消费。</p><h2 id="关于管理费"><a href="#关于管理费" class="headerlink" title="关于管理费"></a>关于管理费</h2><p>在第一年，OCBC 的所有账户都是免管理费的；OCBC 是从第二年开始收取账户管理费，OCBC 各账户收费如下：</p><ul><li>STS 账户（Statement Savings Account）：外国人日均存款不超过2万新元，首年免管理费；否则每月收取 10 新币（50 块人民币左右）管理费</li><li>GSA 账户（Globle Savings Account）：第二年及之后也不收管理费。但它不能作为主账户，必须有一个新币账户作为主账户</li><li>360 账户：外国人日均存款不超过 3000 新币（16000多人民币），首年免管理费；否则每月收取 2 新币（10多人民币左右）管理费</li><li>MSA 账户（Monthy Savings Account）：第二年开始每年存满 500 新币，首年免管理费；否则每月收取 2 新币（10多人民币左右）管理费<br>建议保留GSA账户配合360账户或MSA账户使用，MSA账户需在OCBC网页版进行开通。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>注意汇入时如果是选择双方承担手续费，则会入后OCBC那边也会收入手续费。为避免单笔汇入大于1000 SGD，最好会入金大于1020SGD稳妥些。</li><li>中国大陆用户可以使用“OCBC Digital”申请新加坡OCBC银行账户，使用邀请码：<code>632S37JB</code>可获得15 SGD赠金（需满足30天内单笔汇入大于1000 SGD）</li><li>首次激活必须同名账户，例如这里用的工商银银行。</li><li>工商银行汇金的手续费相对较低，汇出去手续费40元，OCBC入账扣了8 SGD（大约40多人民币），总共耗损80多人民币。而激活成功后收到的15SGD赠金刚好填补这笔损耗。</li><li>如果您需要申请OCBC借记卡，需要先去网页版修改地址，然后再申请360 Account，申请360 Account时，职业不要选择自雇</li><li>OCBC的账户前一年基本都是免管理费的，1年后未达到最低存款要求会收取管理费。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> OCBC </tag>
            
            <tag> 新加坡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机漫步的傻瓜-随手记录</title>
      <link href="/2024/06/17/on-the-go/"/>
      <url>/2024/06/17/on-the-go/</url>
      
        <content type="html"><![CDATA[<ul><li>悬浮时代，先有后优</li><li>善始者实繁，克终者盖寡</li><li>撤退是为了更好地进攻，进攻是为了更好地撤退</li><li>有时候，慢即是快</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 随机漫步 </tag>
            
            <tag> 胡思乱想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YOLO+IOPaint组合，自动识别并移除水印的demo</title>
      <link href="/2024/06/06/yolo8-plus-iopaint/"/>
      <url>/2024/06/06/yolo8-plus-iopaint/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本demo使用<a href="https://github.com/ultralytics/ultralytics">ultralytics-YOLO8</a>对水印位置进行检测，然后使用<a href="https://github.com/Sanster/IOPaint">IOPaint</a>移除yolo识别的目标水印。</p><p>本demo中使用的<a href="models/last.pt">last.pt</a>模型来自<a href="https://github.com/Samge0/yolo8-watermark-brand">yolo8-watermark-brand</a>仓库。</p><p>本demo支持使用iopaint的api方式去除水印，只需在<a href="https://github.com/Samge0/yolo8-plus-iopaint/blob/main/remove_watermark_with_onnx.py">remove_watermark_with_onnx.py</a> 或 <a href="https://github.com/Samge0/yolo8-plus-iopaint/blob/main/remove_watermark.py">remove_watermark.py</a>中配置<code>USE_IOPAINT_API=True</code>，可减少批量操作时iopaint命令行方式的初始化耗时。</p><p>如果配置<code>USE_IOPAINT_API=True</code>，需要先启动iopaint服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python iopaint_server.py</span><br></pre></td></tr></table></figure><p>当然，也可以选择对接单独部署的iopaint服务，只需要在<a href="https://github.com/Samge0/yolo8-plus-iopaint/blob/main/iopaint_api_utils.py">iopaint_api_utils.py</a>中配置自定义的<code>IOPAINT_SERVER_HOST</code>即可。</p><h2 id="当前开发环境使用的关键依赖版本"><a href="#当前开发环境使用的关键依赖版本" class="headerlink" title="当前开发环境使用的关键依赖版本"></a>当前开发环境使用的关键依赖版本</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">python==3.8.18</span><br><span class="line">torch==2.3.0+cu118</span><br><span class="line">torchvision==0.18.0+cu118</span><br><span class="line">ultralytics==8.2.26</span><br><span class="line">IOPaint==1.3.3</span><br><span class="line">onnxruntime_gpu==1.18.0</span><br><span class="line"></span><br><span class="line"># the onnx dependency is to automatically export the onnx model at train time</span><br><span class="line">onnx==1.16.1</span><br><span class="line">onnx-simplifier==0.4.36</span><br><span class="line">onnxsim==0.4.36</span><br><span class="line">onnxslim==0.1.28</span><br></pre></td></tr></table></figure><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul><li><p>【推荐】使用vscode的<code>Dev Containers</code>模式，参考<a href=".devcontainer/README.md">.devcontainer&#x2F;README.md</a></p></li><li><p>【可选】其他虚拟环境方式</p><ul><li>【二选一】安装torch-cpu版  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision</span><br></pre></td></tr></table></figure></li><li>【二选一】安装torch-cuda版  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118</span><br></pre></td></tr></table></figure></li><li>【必要】安装依赖  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="运行方式-demo1："><a href="#运行方式-demo1：" class="headerlink" title="运行方式-demo1："></a>运行方式-demo1：</h2><p><code>ultralytics + IOPaint（命令行方式）</code>，<a href="https://github.com/Samge0/yolo8-plus-iopaint/blob/main/remove_watermark.py">脚本：remove_watermark.py</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python remove_watermark.py</span><br></pre></td></tr></table></figure><h2 id="运行方式-demo2："><a href="#运行方式-demo2：" class="headerlink" title="运行方式-demo2："></a>运行方式-demo2：</h2><p><code>onnxruntime + IOPaint（命令行方式）</code>，<a href="https://github.com/Samge0/yolo8-plus-iopaint/blob/main/remove_watermark_with_onnx.py">脚本：remove_watermark_with_onnx.py</a><br>pt转onnx模型可参考<a href="https://github.com/Samge0/yolo8-plus-iopaint/blob/main/yolo_utils.py">yolo_utils.py</a>的mian函数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python remove_watermark_with_onnx.py</span><br></pre></td></tr></table></figure><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><blockquote><p>1、如果遇到<code>Could not locate zlibwapi.dll. Please make sure it is in your library path</code>错误，需要下载相关dll放置到目标位置：</p></blockquote><ul><li><a href="https://pan.baidu.com/s/1SrxZFkxwpwydn1fuFaWtgw?pwd=6cgb">点击下载：https://pan.baidu.com/s/1SrxZFkxwpwydn1fuFaWtgw?pwd=6cgb 提取码: 6cgb</a></li><li>lib文件放到<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.x\lib</code> （这里以windows系统为例，其中<code>v11.x</code>是实际安装的cuda版本路径）</li><li>dll文件放到<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.x\bin</code> （这里以windows系统为例，其中<code>v11.x</code>是实际安装的cuda版本路径）</li></ul><h2 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h2><table><thead><tr><th align="center">before</th><th align="center">after</th></tr></thead><tbody><tr><td align="center"><img src="https://github.com/Samge0/yolo8-plus-iopaint/assets/17336101/801bdcef-88d7-449d-a48a-428e117b58ab" alt="before"></td><td align="center"><img src="https://github.com/Samge0/yolo8-plus-iopaint/assets/17336101/a465b913-4aa1-4c04-a12b-c0211d47b6bc" alt="after"></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> samge </tag>
            
            <tag> yolo </tag>
            
            <tag> iopaint </tag>
            
            <tag> watermark </tag>
            
            <tag> models </tag>
            
            <tag> onnx </tag>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用yolo训练品牌logo的水印检测模型的demo</title>
      <link href="/2024/06/06/yolo8-watermark-brand/"/>
      <url>/2024/06/06/yolo8-watermark-brand/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本demo使用<code>labelImg</code>对<code>26</code>张样本图片的水印位置进行标注，<a href="https://github.com/ultralytics/ultralytics">ultralytics-YOLO8</a>对水印位置进行模型训练&amp;检测。</p><p>如果需要使用 <a href="https://github.com/ultralytics/ultralytics">ultralytics-YOLO8</a> + <a href="https://github.com/Sanster/IOPaint">IOPaint</a> 进行组合，自动移除yolo识别的目标水印，请点击<a href="https://github.com/Samge0/yolo8-plus-iopaint">yolo8-plus-iopaint</a>仓库查看。</p><h2 id="当前开发环境使用的关键依赖版本"><a href="#当前开发环境使用的关键依赖版本" class="headerlink" title="当前开发环境使用的关键依赖版本"></a>当前开发环境使用的关键依赖版本</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python==3.8.18</span><br><span class="line">torch==2.3.0+cu118</span><br><span class="line">torchvision==0.18.0+cu118</span><br><span class="line">ultralytics==8.2.28</span><br><span class="line"></span><br><span class="line"># labelImg is used to label the training data</span><br><span class="line">labelImg==1.8.6</span><br></pre></td></tr></table></figure><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul><li><p>【推荐】使用vscode的<code>Dev Containers</code>模式，参考<a href="https://github.com/Samge0/yolo8-watermark-brand/tree/main/.devcontainer">.devcontainer&#x2F;README.md</a></p></li><li><p>【可选】其他虚拟环境方式</p><ul><li>【二选一】安装torch-cpu版  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision</span><br></pre></td></tr></table></figure></li><li>【二选一】安装torch-cuda版  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118</span><br></pre></td></tr></table></figure></li><li>【必要】安装依赖  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python train.py</span><br></pre></td></tr></table></figure><h2 id="推理"><a href="#推理" class="headerlink" title="推理"></a>推理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python test.py</span><br></pre></td></tr></table></figure><h2 id="自定义数据集进行训练："><a href="#自定义数据集进行训练：" class="headerlink" title="自定义数据集进行训练："></a>自定义数据集进行训练：</h2><ul><li><p>安装<code>labelImg</code></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install labelImg</span><br></pre></td></tr></table></figure></li><li><p>启动<code>labelImg</code></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">labelImg</span><br></pre></td></tr></table></figure></li><li><p>清理或备份旧的数据集，将需要训练的新数据图集放到<a href="datasets/data/images">datasets&#x2F;data&#x2F;images</a>目录，参与训练的图片宽高最好一致，训练前需要在<a href="train.py">train.py</a>中配置<code>imgsz</code>图片宽高信息</p></li><li><p>在<code>labelImg</code>打开<a href="datasets/data/images">datasets&#x2F;data&#x2F;images</a>的图集进行标注，保存格式选择<code>YOLO</code>（建议点击<code>File -&gt; YOLO</code>保存全局默认<code>YOLO</code>导出后，重新打开<code>labelImg</code>，可在后续保存标注时避免频繁切换导出格式）</p></li><li><p>标注完毕后，执行命令将<a href="datasets/data/images">datasets&#x2F;data&#x2F;images</a>拆分为<a href="datasets/data/train">datasets&#x2F;data&#x2F;train</a>、<a href="datasets/data/test">datasets&#x2F;data&#x2F;test</a>、<a href="datasets/data/val">datasets&#x2F;data&#x2F;val</a></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd datasets &amp;&amp; python Process.py</span><br></pre></td></tr></table></figure></li><li><p>按前面文档所示，执行<code>python train.py</code>进行训练，执行<code>python test.py</code>进行推理</p></li></ul><h2 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h2><ul><li><p>labelImg标注界面<br><img src="https://github.com/Samge0/yolo8-watermark-brand/assets/17336101/c8f9ac72-09f0-4bf7-93f5-e0aa0b20e7ef" alt="labelImg"></p></li><li><p>训练后的模型预测结果<br><img src="https://github.com/Samge0/yolo8-watermark-brand/assets/17336101/ccdccdc0-8683-499d-bd2b-27948a0fa4f3" alt="output-result"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> samge </tag>
            
            <tag> yolo </tag>
            
            <tag> watermark </tag>
            
            <tag> models </tag>
            
            <tag> demo </tag>
            
            <tag> train </tag>
            
            <tag> labelImg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ApkCopilot 多渠道打包&amp;签名</title>
      <link href="/2024/06/06/apk-copilot/"/>
      <url>/2024/06/06/apk-copilot/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个简易的ApkCopilot 多渠道打包&amp;签名 + gradio操作界面。<a href="https://github.com/Samge0/apk-copilot">Github&gt;&gt;</a><br><br>360加固的<code>多渠道打包+签名</code>功能收费了，这是<code>多渠道打包+签名</code>的替代方案，只需要<code>上传加固后的apk</code>即可自动签名&amp;打多渠道包。<br><br>本项目使用<code>walle</code>进行多渠道打包，需要在安卓项目中配置<a href="https://github.com/Meituan-Dianping/walle">walle</a>。</p><h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><p>（这里只是列出开发已知可行版本，其他版本需要使用这自己探索）</p><ul><li>java：<code>java version &quot;17.0.2</code>，<a href="https://jdk.java.net/archive/">下载地址&gt;&gt;</a></li><li>python：<code>Python 3.10</code>，<a href="https://www.python.org/downloads/">下载地址&gt;&gt;</a></li><li>build-tools：<code>33.0.0</code>，<a href="https://androidsdkmanager.azurewebsites.net/Buildtools">下载地址&gt;&gt;</a></li></ul><h2 id="docker方式运行"><a href="#docker方式运行" class="headerlink" title="docker方式运行"></a>docker方式运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">--name apk-copilot \</span><br><span class="line">-p 7860:7860 \</span><br><span class="line">-e APK_COPILOT_AUTH=&quot;user1:pw1|user2:pw2&quot; \</span><br><span class="line">-v ~/user_configs:/app/res/user_configs \</span><br><span class="line">--pull=always \</span><br><span class="line">--restart always \</span><br><span class="line">--memory=1.0G \</span><br><span class="line">samge/apk-copilot:latest</span><br></pre></td></tr></table></figure><h2 id="本地源码运行"><a href="#本地源码运行" class="headerlink" title="本地源码运行"></a>本地源码运行</h2><ul><li><p>安装依赖<br>先按<code>版本信息</code>配置本地环境，然后创建python的env环境，安装python依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li><li><p>复制配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp config.dev.json config.json</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -R 本地路径xxx/build-tools/31.0.0 res/build-tools/31.0.0</span><br></pre></td></tr></table></figure></li><li><p>运行</p><blockquote><p>gradio界面</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uvicorn app:app --reload --host 0.0.0.0 --port 7860</span><br></pre></td></tr></table></figure></li></ul><h2 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h2><p><img src="https://github.com/Samge0/apk-copilot/raw/main/res/screenshot/%E4%B8%80%E9%94%AE%E6%89%93%E5%A4%9A%E6%B8%A0%E9%81%93%E5%8C%85&%E7%AD%BE%E5%90%8D.png" alt="一键打多渠道包&amp;签名"><br><img src="https://github.com/Samge0/apk-copilot/raw/main/res/screenshot/%E5%AF%86%E9%92%A5%E9%85%8D%E7%BD%AE.jpg" alt="密钥配置"><br><img src="https://github.com/Samge0/apk-copilot/raw/main/res/screenshot/%E6%B8%A0%E9%81%93%E9%85%8D%E7%BD%AE.png" alt="渠道配置"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> ApkCopilot </tag>
            
            <tag> 多渠道打包 </tag>
            
            <tag> apk签名 </tag>
            
            <tag> 360加固 </tag>
            
            <tag> samge </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode Samge Translate 翻译助手 插件</title>
      <link href="/2024/06/06/vscode-samge-translate/"/>
      <url>/2024/06/06/vscode-samge-translate/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> <a href="https://github.com/Samge0/vscode-samge-translate">VSCode Samge Translate</a>是一个基于VSCode的<code>翻译插件</code>，提供了从<code>英文到中文</code>、从<code>中文到英文</code>的翻译功能，以及<code>中文转变量名</code>功能支持多规则变量名（<code>camelCase、capitalCase、constantCase、dotCase、headerCase、noCase、paramCase、pascalCase、pathCase、snakeCase</code>）转换操作。使用百度&#x2F;其他<code>翻译引擎API</code>来实现准确的翻译结果。<br></p><p>当前支持的翻译引擎包括：<code>百度</code>、<code>阿里</code>、<code>腾讯</code>、<code>火山</code>、<code>有道</code>、<code>DeepL</code>。<br></p><p>这个GIF展示本插件的翻译功能交互，翻译结果可在选中文本后面展示、OUTPUT面板展示、右下角提示框展示、鼠标放在文本上悬浮展示，这些展示方式可在配置中开启或关闭。<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/SamgeTranslateDisplay.gif" alt="SamgeTranslateDisplay"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>您可以通过VSCode扩展市场搜索 <code>VSCode Samge Translate</code> 来安装此插件。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><strong>英文翻译成中文</strong>：可以将选中的英文文本翻译成中文。</li><li><strong>英文翻译成中文-自动替换</strong>：可以将选中的英文文本翻译成中文，并自动替换原选择文本。</li><li><strong>中文翻译成英文</strong>：可以将选中的中文文本翻译成英文。</li><li><strong>中文翻译成英文-自动替换</strong>：可以将选中的中文文本翻译成英文，并自动替换原选择文本。</li><li><strong>中文转变量名-自动替换</strong>：支持将中文自动转换成多种编程命名格式的英文变量名。</li><li><strong>配置灵活</strong>：可通过VSCode设置自定义翻译引擎参数等。</li></ul><h3 id="快捷键信息（可自行修改）"><a href="#快捷键信息（可自行修改）" class="headerlink" title="快捷键信息（可自行修改）"></a>快捷键信息（可自行修改）</h3><table><thead><tr><th>命令名称</th><th>预置快捷键（Windows&#x2F;Linux）</th><th>预置快捷键（macOS）</th></tr></thead><tbody><tr><td>Samge Translate：英译中-en2zh</td><td>alt+x</td><td>alt+x</td></tr><tr><td>Samge Translate：英译中并替换-en2zhReplace</td><td>ctrl+shift+alt+x</td><td>ctrl+shift+alt+x</td></tr><tr><td>Samge Translate：中译英-zh2en</td><td>alt+z</td><td>alt+z</td></tr><tr><td>Samge Translate：中译英并替换-zh2enReplace</td><td>ctrl+shift+alt+z</td><td>ctrl+shift+alt+z</td></tr><tr><td>Samge Translate：中文转变量名-zh2var</td><td>shift+alt+w</td><td>shift+alt+w</td></tr></tbody></table><h3 id="配置项信息"><a href="#配置项信息" class="headerlink" title="配置项信息"></a>配置项信息</h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>samge.translate.enable</td><td>boolean</td><td>true</td><td>是否启用插件</td></tr><tr><td>samge.translate.enableHover</td><td>boolean</td><td>false</td><td>是否在鼠标悬浮时自动翻译</td></tr><tr><td>samge.translate.enableOutput</td><td>boolean</td><td>true</td><td>是否在OUTPUT窗口展示</td></tr><tr><td>samge.translate.enableRightDisplay</td><td>boolean</td><td>true</td><td>是否在选中文本右侧展示翻译结果</td></tr><tr><td>samge.translate.languageFrom</td><td>string</td><td>en</td><td>翻译源语言</td></tr><tr><td>samge.translate.languageTo</td><td>string</td><td>zh</td><td>翻译目标语言</td></tr><tr><td>samge.translate.providerName</td><td>string</td><td>baidu</td><td>翻译引擎提供者</td></tr><tr><td>samge.translate.providerAppId</td><td>string</td><td></td><td>翻译引擎的AppId</td></tr><tr><td>samge.translate.providerAppSecret</td><td>string</td><td></td><td>翻译引擎的AppSecret</td></tr><tr><td>samge.translate.limitSingleMaximum</td><td>integer</td><td>1000</td><td>单次翻译最大字符限制</td></tr></tbody></table><h2 id="快捷键和配置的编辑方法"><a href="#快捷键和配置的编辑方法" class="headerlink" title="快捷键和配置的编辑方法"></a>快捷键和配置的编辑方法</h2><p>您可以通过以下步骤来编辑快捷键和配置项：</p><ol><li><strong>编辑快捷键</strong>：在VSCode中，通过 <code>File &gt; Preferences &gt; Keyboard Shortcuts</code> (文件 &gt; 首选项 &gt; 键盘快捷方式) 来设置您的快捷键（可搜索关键词<code>samge</code>快速定位相关配置项）。</li><li><strong>编辑配置</strong>：在VSCode中，通过 <code>File &gt; Preferences &gt; Settings &gt; Extensions &gt; Vscode Samge Translate Configuration</code> (文件 &gt; 首选项 &gt; 设置 &gt; 扩展 &gt; Vscode Samge Translate Configuration) 来设置您的配置项（可搜索关键词<code>samge</code>快速定位相关配置项）。</li></ol><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul><li><p><a href="">如何获取appId和appSecret</a>？</p><ul><li><a href="https://api.fanyi.baidu.com/api/trans/product/prodinfo">百度</a>：5万免费字符&#x2F;月 (个人认证后可切换高级版：100w免费字符&#x2F;月)</li><li><a href="https://www.aliyun.com/product/ai/base_alimt?source=5176.11533457&userCode=wsnup3vv">阿里</a>：：100万免费字符&#x2F;月</li><li><a href="https://cloud.tencent.com/document/product/551/35017?fromSource=gwzcw.1293314.1293314.1293314&cps_key=963fb04b6aae26f0014088af393dccf1">腾讯</a>：：500万免费字符&#x2F;月</li><li><a href="https://www.volcengine.com/docs/4640/68515">火山</a>：：200万免费字符&#x2F;月</li><li><a href="https://ai.youdao.com/DOCSIRMA/html/trans/price/wbfy/index.html">有道</a>：：新账号有50元固定免费体验额度</li><li><a href="https://www.deepl.com/zh/pro#developer">deepl</a>：：50万免费字符&#x2F;月</li></ul></li><li><p>当前支持的翻译引擎有哪些？</p><ul><li><input checked="" disabled="" type="checkbox"> 百度 (baidu)</li><li><input checked="" disabled="" type="checkbox"> 阿里 (alibaba)</li><li><input checked="" disabled="" type="checkbox"> 腾讯 (tencent)</li><li><input checked="" disabled="" type="checkbox"> 火山 (volcano)</li><li><input checked="" disabled="" type="checkbox"> 有道 (youdao)</li><li><input checked="" disabled="" type="checkbox"> DeepL (deepl)</li></ul></li><li><p>当前支持的翻译语言有哪些？</p><ul><li><input checked="" disabled="" type="checkbox"> en</li><li><input checked="" disabled="" type="checkbox"> zh</li></ul></li></ul><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p><a href="https://github.com/Samge0/vscode-samge-translate/blob/main/CHANGELOG.md">点击这里查看更新记录&gt;&gt;</a></p><hr><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>如果您有任何建议或代码贡献，欢迎通过GitHub仓库提交问题或拉取请求。</p><h2 id="版权和许可"><a href="#版权和许可" class="headerlink" title="版权和许可"></a>版权和许可</h2><p>此VSCode插件遵循MIT许可证发布。</p><h3 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h3><p>自动缓存翻译引擎配置参数，方便切换：<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/SamgeTranslateConfigAutoCache.gif" alt="SamgeTranslateConfigAutoCache"></p><p>翻译的多种结果展示方式：<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/TranslateDisplayStyle.png" alt="TranslateDisplayStyle"></p><p>中文转变量名（中英混合&#x2F;纯英文也可以转不同驼峰规则变量名）：<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/TestCustomVariables.png" alt="TestCustomVariables"></p><p>自定义快捷键.gif：<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/KeyboardShortcuts.gif" alt="KeyboardShortcuts.gif"></p><p>自定义快捷键：<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/KeyboardShortcuts.png" alt="KeyboardShortcuts"></p><p>配置信息.gif：<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/ExtensionsVscodeSamgeTranslateConfiguration.gif" alt="ExtensionsVscodeSamgeTranslateConfiguration.gif"></p><p>配置信息：<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/ExtensionsVscodeSamgeTranslateConfiguration.png" alt="ExtensionsVscodeSamgeTranslateConfiguration"></p><p>增加光标左侧连续汉字转英文功能（默认没有开启，需要到插件配置中勾选并启用该功能）:<br><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/KeyboardShortcutsAndZh2varNew.gif" alt="KeyboardShortcutsAndZh2varNew"></p><p><img src="https://github.com/Samge0/vscode-samge-translate/raw/main/screenshot/KeyboardShortcutsAndZh2varNew.png" alt="KeyboardShortcutsAndZh2varNew"></p><h3 id="Dev"><a href="#Dev" class="headerlink" title="Dev"></a>Dev</h3><p><a href="https://github.com/Samge0/vscode-samge-translate/blob/main/README-dev.md">点击这里查看插件开发相关内容&gt;&gt;</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> samge </tag>
            
            <tag> tools </tag>
            
            <tag> vscode </tag>
            
            <tag> vscode插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl2中docker环境突然无法ping通宿主机的问题处理</title>
      <link href="/2024/06/06/wsl2-ping-unreachable/"/>
      <url>/2024/06/06/wsl2-ping-unreachable/</url>
      
        <content type="html"><![CDATA[<blockquote><p>【省流提示】：以下内容作用不大，仅属于作者个人的踩坑记录，请忽略。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>windows下的docker用得好好的，但突然有一天docker容器无法访问宿主机中的代理，进入容器发现无法ping通宿主机。（我只是个小呆瓜，我也很懵啊）<br><img src="https://github.com/Samge0/samge-blog/assets/17336101/293ab6c5-d899-4581-97ee-e321e9572395" alt="image"></p><h2 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程&gt;&gt;&gt;"></a>处理过程&gt;&gt;&gt;</h2><h3 id="1、检查网络配置"><a href="#1、检查网络配置" class="headerlink" title="1、检查网络配置"></a>1、检查网络配置</h3><p>查看wsl2网络配置跟宿主机网络配置是否一致</p><p>分别在wsl2虚拟机中执行<code>ifconfig</code>跟在windows中执行<code>ipconfig /all</code>，发现wsl2中的ip为<code>172.24.101.x</code>，windows中的WSL桥适配器的ip是<code>172.24.96.x</code>。<br><img src="https://github.com/Samge0/samge-blog/assets/17336101/4d27e4e2-b438-4bba-85e7-94adc2d890db" alt="image"></p><h3 id="2、修改配置"><a href="#2、修改配置" class="headerlink" title="2、修改配置"></a>2、修改配置</h3><p>修改wsl2中的ip（例如这里修改为<code>172.24.96.100</code>）</p><ul><li>【可选】在wsl2终端中直接修改，测试是否可行：  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ifconfig eth0 172.24.96.100 netmask 255.255.240.0</span><br><span class="line">sudo route add default gw 172.24.96.1 eth0</span><br></pre></td></tr></table></figure></li><li>【推荐】修改wsl2虚拟机中的配置文件<code>/etc/netplan/01-netcfg.yaml</code>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | tee /etc/netplan/01-netcfg.yaml</span><br><span class="line">network:</span><br><span class="line">version: 2</span><br><span class="line">ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">    dhcp4: no</span><br><span class="line">    addresses: [172.24.96.100/20]</span><br><span class="line">    gateway4: 172.24.96.1</span><br><span class="line">    nameservers:</span><br><span class="line">        addresses: [8.8.8.8]</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>  然后执行 <code>sudo netplan apply</code> 使配置生效</li></ul><h3 id="3、验证结果"><a href="#3、验证结果" class="headerlink" title="3、验证结果"></a>3、验证结果</h3><p>修改wsl2的ip配置后，可以正常ping通宿主机了。<br><img src="https://github.com/Samge0/samge-blog/assets/17336101/c318db43-5f42-4430-a1a9-9f0632540f6c" alt="image"></p><h3 id="4、被啪啪打脸"><a href="#4、被啪啪打脸" class="headerlink" title="4、被啪啪打脸"></a>4、被啪啪打脸</h3><p>以为上面可以ping通就可以了吗？</p><p>NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO!NO^10086</p><p>测试了其他docker容器，发现还是无法ping通，所以上面解决方案是错误的（留下没有技术的泪水(̂ ˃̥̥̥ ˑ̫ ˂̥̥̥ )̂……洪湖水啊……）。</p><p><img src="https://github.com/Samge0/samge-blog/assets/17336101/a797c956-8cdb-4001-96f1-7361a497f025" alt="image"></p><h3 id="5、继续排查继续尝试解决"><a href="#5、继续排查继续尝试解决" class="headerlink" title="5、继续排查继续尝试解决"></a>5、继续排查继续尝试解决</h3><p>心想这问题就是这两天发生的，<code>嫌疑犯</code>必定在其中。我似乎回忆起最近用vscode的<code>Dev Containers</code>插件来运行过开发环境，经排查，确实又找到了一些线索。</p><p>以下是其中一个<code>.devcontainer/docker-compose.yml</code>的配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">storydiffusion:</span></span><br><span class="line">    <span class="attr">build:</span> </span><br><span class="line">      <span class="attr">context:</span> <span class="string">..</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">.devcontainer/Dockerfile-dev</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="attr">PROXY:</span> <span class="string">http://192.168.50.48:7890</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">..:/app</span>    </span><br><span class="line">      <span class="bullet">-</span> <span class="string">F:/.cache:/root/.cache</span>    </span><br><span class="line">    <span class="attr">command:</span> <span class="string">sleep</span> <span class="string">infinity</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">NVIDIA_VISIBLE_DEVICES:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">XXXX_DEMO:</span> <span class="string">XXXX_DEMO</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">reservations:</span></span><br><span class="line">          <span class="attr">devices:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">driver:</span> <span class="string">nvidia</span></span><br><span class="line">            <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">capabilities:</span> [<span class="string">gpu</span>]</span><br><span class="line">    <span class="attr">shm_size:</span> <span class="string">22g</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;0.0.0.0:7890:7860&quot;</span></span><br></pre></td></tr></table></figure><p>可以看到<code>PROXY</code>配置了端口是<code>7890</code>的代理，而下面的<code>ports</code>本来应该将容器的<code>7860</code>映射到宿主机的<code>7860</code>，但是实际上映射到了<code>0.0.0.0:7890</code>。</p><p>我怀疑过是否跟端口冲突有关，但是正常情况下，启动docker容器时应该会报端口占用才对，这里没有提示，为什么呢？可能是当时代理软件没有打开，而<code>7890</code>端口刚好未被占用吧。</p><p>于是乎，开发环境的docker容器就这么启动了，且中奖式地创建了一条<code>192.168.50.0/20</code>的<code>bridge</code>网络。而我宿主机的地址是<code>192.168.50.48</code>，跟这个docker的<code>bridge</code>网络有冲突。</p><p>我的网络知识实在有限（留下没有技术的泪水……(-̩̩̩-̩̩̩-̩̩̩-̩̩̩-̩̩̩___-̩̩̩-̩̩̩-̩̩̩-̩̩̩-̩̩̩)），实在不明白这一切为什么就这么巧合地发生了。</p><p><img src="https://github.com/Samge0/samge-blog/assets/17336101/a797c956-8cdb-4001-96f1-7361a497f025" alt="image"></p><p>我只知道，当我将那条<code>192.168.50.0/20</code>的<code>bridge</code>网络删除掉 + 修正之前错误的<code>7890</code>端口映射后，一切都恢复了正常。</p><p>我感到欢喜又感到悲伤。欢喜是因为这个问题终于解决了，可以继续<code>c</code>docker了。悲伤的是，我并不知道到底是什么原因，导致docker创建了<code>192.168.50.0/20</code>的<code>bridge</code>网络。 </p><p>或许 Docker 在创建默认 bridge 网络时检测到冲突（例如，如果 <code>172.17.0.0/16</code> 已经被占用），它可能会选择其他可用的子网。而 <code>192.168.50.0/20</code> 碰巧是下一个可用的子网，那么它就选择了这个子网……<br><img src="https://github.com/Samge0/samge-blog/assets/17336101/b886082e-1e2d-409b-83be-6633d3a0f4e9" alt="image"></p><p>我能想到的是，这一切可能都源于中奖式的巧合（再再次留下没有技术的泪水……）(༎ຶ ෴ ༎ຶ) ( ´༎ຶㅂ༎ຶ&#96;) (༎ຶ⌑༎ຶ) ฅ(⌯͒•̩̩̩́ ˑ̫ •̩̩̩̀⌯͒)ฅ</p><p><img src="https://github.com/Samge0/samge-blog/assets/17336101/a797c956-8cdb-4001-96f1-7361a497f025" alt="image"></p><h3 id="6、小结"><a href="#6、小结" class="headerlink" title="6、小结"></a>6、小结</h3><p>其实上面的<code>.devcontainer/docker-compose.yml</code>配置，没有明确配置docker的网络，启动时会创建一个新的docker桥接网络。这里建议还是主动指定容器的网络，尽可能的避免奇怪（这里的奇怪仅对于我这样的小白而言）的问题发生。</p><p>没指定网络的情况：<br><img src="https://github.com/Samge0/samge-blog/assets/17336101/b886082e-1e2d-409b-83be-6633d3a0f4e9" alt="image"></p><p>指定网络的情况：<br><img src="https://github.com/Samge0/samge-blog/assets/17336101/1f55ed21-5801-4aa7-9a5f-46a9288d68f8" alt="image"></p><p>如何配置指定的网络？只需要在<code>.devcontainer/docker-compose.yml</code>中增加<code>network_mode: bridge</code>即可，默认会自动配置到名称为<code>bridge</code>的网络下。</p><p>如果需要配置其他网络，则需要手动创建，并指定网络名称，例如这里创建一个名为<code>vscode_devcontainer</code>的网络：。</p><ul><li><p>创建网络</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create vscode_devcontainer</span><br></pre></td></tr></table></figure></li><li><p>配置<code>.devcontainer/docker-compose.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">storydiffusion:</span></span><br><span class="line">    <span class="attr">build:</span> </span><br><span class="line">      <span class="attr">context:</span> <span class="string">..</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">.devcontainer/Dockerfile-dev</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="attr">PROXY:</span> <span class="string">http://192.168.50.48:7890</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">..:/app</span>    </span><br><span class="line">      <span class="bullet">-</span> <span class="string">F:/.cache:/root/.cache</span>    </span><br><span class="line">    <span class="attr">command:</span> <span class="string">sleep</span> <span class="string">infinity</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">NVIDIA_VISIBLE_DEVICES:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">XXXX_DEMO:</span> <span class="string">XXXX_DEMO</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">reservations:</span></span><br><span class="line">          <span class="attr">devices:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">driver:</span> <span class="string">nvidia</span></span><br><span class="line">            <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">capabilities:</span> [<span class="string">gpu</span>]</span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">vscode_devcontainer</span></span><br><span class="line">    <span class="attr">shm_size:</span> <span class="string">22g</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;0.0.0.0:7860:7860&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>.devcontainer/devcontainer.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;storydiffusion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dockerComposeFile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;docker-compose.yml&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;storydiffusion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workspaceFolder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/app&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;extensions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;ms-python.python&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;ms-python.debugpy&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;humao.rest-client&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;samge.vscode-samge-translate&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vscode_devcontainer&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明&gt;&gt;&gt;"></a>其他说明&gt;&gt;&gt;</h2><h3 id="1、参考文章"><a href="#1、参考文章" class="headerlink" title="1、参考文章"></a>1、参考文章</h3><ul><li><a href="https://www.jianshu.com/p/ba2cf239ebe0">WSL2 网络异常排查 [ping 不通、网络地址异常、缺少默认路由、被宿主机防火墙拦截]</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> wls2 </tag>
            
            <tag> windows </tag>
            
            <tag> bridge </tag>
            
            <tag> 子网冲突 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/27/hello-world/"/>
      <url>/2024/05/27/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Hi-guys"><a href="#Hi-guys" class="headerlink" title="Hi guys"></a>Hi guys</h2><p>my name is samge, nice to meet you.</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
